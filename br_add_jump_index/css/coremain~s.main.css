@import url(https://fonts.googleapis.com/css?family=IBM+Plex+Sans:300,400,500,700&display=swap&subset=cyrillic,cyrillic-ext,latin-ext,vietnamese);
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** @define toast-messages; */
.toast-messages {
  position: absolute;
  z-index: 1000;
  pointer-events: none;
  display: flex;
  flex-direction: column;
  justify-content: space-between; }
  @media (min-width: 320px) and (max-width: 767px) {
    .toast-messages {
      top: 2rem;
      height: calc(100vh - 2rem); } }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
.theme-select-settings {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: 100%; }
  .theme-select-settings__title {
    margin-bottom: 16px; }
  .theme-select-settings__content {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    width: 100%; }
  .theme-select-settings__option {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 234px;
    height: 207px; }
    .theme-select-settings__option__title {
      margin-top: 9px;
      font-size: 14px;
      line-height: 1.43;
      color: var(--text-general); }
      .theme-select-settings__option__title--selected {
        font-weight: bold;
        color: var(--text-prominent); }
    .theme-select-settings__option__icon {
      width: 234px;
      height: 178px;
      cursor: pointer;
      border-radius: 4px;
      border: 1px solid var(--border-normal); }
      .theme-select-settings__option__icon:hover:not(.theme-select-settings__option__icon--active) {
        border-color: var(--border-hover); }
      .theme-select-settings__option__icon--active {
        border-color: var(--border-active); }
      .theme-select-settings__option__icon--disabled {
        opacity: 0.16 !important;
        cursor: not-allowed !important; }

/** @define settings-language */
.settings-language__language-header {
  margin-bottom: 16px; }

.settings-language__language-container {
  display: grid;
  grid-template-columns: repeat(4, minmax(90px, 1fr));
  grid-template-rows: repeat(5, auto);
  grid-gap: 16px; }

.settings-language__language-link {
  color: var(--text-prominent);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  border-radius: 4px;
  padding: 16px;
  text-decoration: none;
  background-color: var(--state-normal);
  cursor: pointer; }
  .settings-language__language-link--active {
    border: 1px solid var(--border-active);
    color: var(--text-prominent); }

.settings-language__language-flag {
  width: 36px;
  height: 24px; }

.settings-language__language-name {
  font-size: 1.4rem;
  color: var(--text-general);
  font-weight: 400;
  text-transform: none;
  text-align: left;
  line-height: 1.5;
  color: var(--text-prominent);
  margin-top: 0.8rem; }
  .settings-language__language-name--active {
    font-weight: bold;
    color: var(--text-prominent); }

/** @define dc-modal-header; */
.dc-modal-header--modal-settings {
  background-color: var(--general-main-1); }

.dc-modal-header__title--modal-settings {
  min-width: 28%;
  background-color: var(--general-section-1);
  max-width: 206px; }

/** @define dc-modal; */
.dc-modal__container_modal-settings {
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */ }
  .dc-modal__container_modal-settings .dc-modal-header {
    border-bottom-width: 0; }
  .dc-modal__container_modal-settings .dc-vertical-tab__tab-meta-wrapper {
    width: 100%;
    max-width: 206px; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
  .notifications-toggle:hover .notifications-toggle__icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .notifications-toggle:hover .notifications-toggle__icon .color1-fill {
      fill: var(--text-prominent); }
    .notifications-toggle:hover .notifications-toggle__icon .color1-stroke {
      stroke: var(--text-prominent); }
    .notifications-toggle:hover .notifications-toggle__icon .color2-fill {
      fill: none; }
    .notifications-toggle:hover .notifications-toggle__icon .color2-stroke {
      stroke: none; }

/**
 * Define Breakpoints here.
 */
.notifications {
  /** @define notifications-toggle; weak */
  /** @define notifications-dialog; weak */
  /** @define notifications-empty; weak */
  /** @define notifications-item; weak */ }
  .notifications-toggle {
    position: relative;
    margin-right: 24px; }
    .notifications-toggle__icon {
      width: 26px;
      height: 26px;
      pointer-events: none; }
      .notifications-toggle__icon-wrapper {
        cursor: pointer;
        -webkit-user-select: none;
           -moz-user-select: none;
            -ms-user-select: none;
                user-select: none;
        -webkit-touch-callout: none;
        -webkit-tap-highlight-color: transparent; }
        .notifications-toggle__icon-wrapper--active {
          cursor: default; }
      .notifications-toggle__icon .color1-fill {
        fill: var(--text-general); }
      .notifications-toggle__icon .color1-stroke {
        stroke: var(--text-general); }
    .notifications-toggle__step {
      position: absolute;
      left: 1rem;
      top: -2px;
      pointer-events: none; }
    .notifications-toggle--active .dc-popover {
      pointer-events: none; }
  .notifications-dialog {
    position: absolute;
    top: 48px;
    left: calc(-50% - 10rem);
    width: 264px;
    height: 525px;
    background: var(--general-main-2);
    border-radius: 4px;
    box-shadow: 0 4px 8px 2px var(--shadow-menu);
    transition: transform 0.3s cubic-bezier(0.25, 0.1, 0.25, 1), opacity 0.25s linear;
    opacity: 0;
    transform: translate3d(0, -20px, 0); }
    .notifications-dialog__header {
      display: flex;
      align-items: center;
      justify-content: center;
      border-bottom: 1px solid var(--border-normal); }
      .notifications-dialog__header-text {
        margin: 1rem 0; }
      @media (min-width: 320px) and (max-width: 767px) {
        .notifications-dialog__header {
          display: none; } }
    .notifications-dialog__content {
      padding: 8px 0;
      height: calc(100% - 37px);
      border-radius: 4px; }
      .notifications-dialog__content--empty {
        display: flex;
        height: 100%;
        max-height: 400px; }
      @media (min-width: 320px) and (max-width: 767px) {
        .notifications-dialog__content {
          height: calc(100vh - 40px); } }
    .notifications-dialog--enter-done {
      opacity: 1;
      transform: translate3d(0, 0, 0); }
    .notifications-dialog--enter, .notifications-dialog--exit {
      opacity: 0;
      transform: translate3d(0, -20px, 0); }
    @media (min-width: 320px) and (max-width: 767px) {
      .notifications-dialog {
        opacity: unset;
        transform: none;
        position: relative;
        top: unset;
        left: unset;
        box-shadow: none;
        height: 100%;
        width: 100%;
        background: var(--general-section-2); } }
  .notifications-empty {
    display: flex;
    flex-direction: column;
    align-items: center; }
    .notifications-empty__container {
      flex-grow: 1;
      display: flex;
      align-items: center;
      justify-content: center; }
    .notifications-empty__icon {
      width: 64px;
      height: 64px;
      margin-bottom: 8px; }
      .notifications-empty__icon .color1-fill {
        fill: var(--text-less-prominent); }
    .notifications-empty__header {
      padding: 8px; }
  .notifications-item {
    padding: 0.8rem;
    margin-left: 3.2rem;
    margin-right: 0.8rem;
    position: relative; }
    .notifications-item:not(:last-child):after {
      position: absolute;
      content: '';
      bottom: 0;
      left: -3.2rem;
      width: calc(100% + 4rem);
      height: 1px;
      background: var(--border-disabled); }
    .notifications-item__cta-button {
      padding: 0.3rem 0.8rem;
      margin: 0.8rem 0 0.8rem auto;
      height: 2.4rem;
      width: auto; }
      @media (min-width: 320px) and (max-width: 767px) {
        .notifications-item__cta-button {
          margin: 0.8rem 0 1.6rem auto; } }
    .notifications-item__link-wrapper {
      display: flex;
      justify-content: flex-end; }
    .notifications-item__title {
      margin-bottom: 4px;
      position: relative; }
      .notifications-item__title-icon {
        position: absolute;
        left: -26px;
        top: 2px;
        height: 16px;
        width: 16px;
        pointer-events: none; }
    .notifications-item__message {
      font-size: 1.2rem;
      color: var(--text-prominent);
      line-height: 1.5;
      padding-right: 8px; }
      .notifications-item__message a {
        text-decoration: none;
        font-weight: bold;
        color: var(--text-prominent); }
    .notifications-item__action {
      display: flex;
      justify-content: flex-end; }
    @media (min-width: 320px) and (max-width: 767px) {
      .notifications-item {
        display: flex;
        flex-direction: column; }
        .notifications-item:after {
          left: -1.8rem;
          width: calc(100% + 1.4em);
          height: 2px; } }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.acc-info__select-arrow, .acc-switcher__logout-icon {
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */ }
  .acc-info__select-arrow .color1-fill, .acc-switcher__logout-icon .color1-fill {
    fill: var(--text-general); }
  .acc-info__select-arrow .color1-stroke, .acc-switcher__logout-icon .color1-stroke {
    stroke: var(--text-general); }
  .acc-info__select-arrow .color2-fill, .acc-switcher__logout-icon .color2-fill {
    fill: none; }
  .acc-info__select-arrow .color2-stroke, .acc-switcher__logout-icon .color2-stroke {
    stroke: none; }
  .active.acc-info__select-arrow, .active.acc-switcher__logout-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .active.acc-info__select-arrow .color1-fill, .active.acc-switcher__logout-icon .color1-fill {
      fill: var(--text-prominent); }
    .active.acc-info__select-arrow .color1-stroke, .active.acc-switcher__logout-icon .color1-stroke {
      stroke: var(--text-prominent); }
    .active.acc-info__select-arrow .color2-fill, .active.acc-switcher__logout-icon .color2-fill {
      fill: none; }
    .active.acc-info__select-arrow .color2-stroke, .active.acc-switcher__logout-icon .color2-stroke {
      stroke: none; }
  .disabled.acc-info__select-arrow, .disabled.acc-switcher__logout-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .disabled.acc-info__select-arrow .color1-fill, .disabled.acc-switcher__logout-icon .color1-fill {
      fill: var(--text-disabled); }
    .disabled.acc-info__select-arrow .color1-stroke, .disabled.acc-switcher__logout-icon .color1-stroke {
      stroke: var(--text-disabled); }
    .disabled.acc-info__select-arrow .color2-fill, .disabled.acc-switcher__logout-icon .color2-fill {
      fill: none; }
    .disabled.acc-info__select-arrow .color2-stroke, .disabled.acc-switcher__logout-icon .color2-stroke {
      stroke: none; }
  .white.acc-info__select-arrow, .white.acc-switcher__logout-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .white.acc-info__select-arrow .color1-fill, .white.acc-switcher__logout-icon .color1-fill {
      fill: var(--text-prominent); }
    .white.acc-info__select-arrow .color1-stroke, .white.acc-switcher__logout-icon .color1-stroke {
      stroke: var(--text-prominent); }
  .border_hover_color.acc-info__select-arrow, .border_hover_color.acc-switcher__logout-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .border_hover_color.acc-info__select-arrow .color1-fill, .border_hover_color.acc-switcher__logout-icon .color1-fill {
      fill: var(--text-prominent); }
    .border_hover_color.acc-info__select-arrow .color1-stroke, .border_hover_color.acc-switcher__logout-icon .color1-stroke {
      stroke: var(--text-prominent); }
  .secondary.acc-info__select-arrow, .secondary.acc-switcher__logout-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .secondary.acc-info__select-arrow .color1-fill, .secondary.acc-switcher__logout-icon .color1-fill {
      fill: var(--text-less-prominent); }
    .secondary.acc-info__select-arrow .color1-stroke, .secondary.acc-switcher__logout-icon .color1-stroke {
      stroke: var(--text-less-prominent); }

/**
 * Define Breakpoints here.
 */
/** @define acc-info */
.acc-info {
  align-items: center;
  cursor: pointer;
  display: flex;
  flex-direction: row;
  height: 100%;
  justify-content: center;
  padding: 0 1.6rem 0 1.7rem; }
  .acc-info__preloader {
    position: absolute;
    top: 0;
    right: 0;
    width: 350px;
    height: 46px;
    z-index: 2;
    background: var(--general-main-1); }
    .acc-info__preloader:before {
      content: '';
      position: absolute;
      left: -90px;
      width: 90px;
      height: 46px;
      top: 0;
      background: var(--general-main-1); }
    .acc-info__preloader--no-currency:before {
      left: -140px;
      width: 140px; }
    @media (min-width: 320px) and (max-width: 767px) {
      .acc-info__preloader {
        width: 216px;
        height: 42px;
        top: -3px; }
        .acc-info__preloader:before {
          display: none; }
        .acc-info__preloader--is-crypto {
          width: 100%; } }
  .acc-info__container {
    align-items: center;
    -webkit-box-align: center;
    display: flex; }
  .acc-info__wrapper {
    align-items: center;
    display: flex;
    flex-direction: row;
    height: 100%;
    justify-content: center;
    position: relative;
    margin-right: 0.8rem;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    -webkit-touch-callout: none;
    -webkit-tap-highlight-color: transparent; }
  .acc-info__id {
    pointer-events: none; }
    .acc-info__id-icon {
      vertical-align: middle;
      margin-right: 0.8rem; }
  .acc-info__separator {
    border-right: 1px solid var(--general-section-1);
    width: 2rem;
    height: 3.2rem;
    margin-right: -0.1rem; }
  .acc-info__balance {
    font-size: 1.6rem;
    color: var(--text-profit-success);
    font-weight: 700;
    text-transform: default;
    text-align: center;
    line-height: 1.75;
    padding: 0.5em;
    pointer-events: none; }
  .acc-info__select-arrow {
    pointer-events: none;
    transform: rotate(0);
    transform-origin: 50% 45%;
    transition: transform 0.3s cubic-bezier(0.25, 0.1, 0.25, 1); }
    .acc-info__select-arrow--invert {
      transform: rotate(180deg); }
  @media (min-width: 1024px) {
    .acc-info:hover:not(.show):not(.acc-info--is-disabled) {
      background: var(--state-hover); }
      .acc-info:hover:not(.show):not(.acc-info--is-disabled) .symbols {
        background: transparent; } }
  @media (min-width: 320px) and (max-width: 767px) {
    .acc-info {
      padding: 0 1rem;
      margin-right: -0.8rem; }
      .acc-info__id {
        margin-right: -0.8rem; }
      .acc-info__balance {
        font-size: 1.4rem; }
        .acc-info__balance--no-currency {
          white-space: nowrap; } }
  .acc-info--is-virtual .acc-info__balance {
    color: var(--text-profit-success); }
  .acc-info--is-disabled {
    cursor: not-allowed; }
  .acc-info--show .acc-info__select-arrow {
    transform: rotate(180deg); }
  .acc-info--show .acc-info__select-arrow--invert {
    transform: rotate(0deg); }
  .acc-info__button {
    margin: 0 1.6em 0 0 !important; }
    .acc-info__button:not(:last-child) {
      margin-right: 1em; }
    @media (min-width: 320px) and (max-width: 767px) {
      .acc-info__button {
        height: 2.8rem !important; } }

/* @define acc-switcher; weak */
.acc-switcher {
  cursor: pointer;
  display: flex;
  align-items: center;
  margin: 0 0.8rem;
  height: 4rem;
  position: relative; }
  .acc-switcher--is-loading {
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
    background: var(--general-main-2); }
  .acc-switcher__wrapper {
    border-radius: 4px;
    position: absolute;
    transition: transform 0.3s cubic-bezier(0.25, 0.1, 0.25, 1), opacity 0.25s linear;
    box-shadow: 0 8px 16px 0 var(--shadow-menu);
    right: 0;
    top: calc(100% + 4px);
    width: 320px;
    background-color: var(--general-main-2); }
    .acc-switcher__wrapper--enter-done {
      opacity: 1;
      transform: translate3d(0, 0, 0); }
    .acc-switcher__wrapper--enter, .acc-switcher__wrapper--exit {
      opacity: 0;
      transform: translate3d(0, -20px, 0); }
    .acc-switcher__wrapper .acc-switcher__button {
      max-width: calc(100% - 1.6rem);
      margin: 0.2rem 0.8rem 0.8rem;
      height: 4rem; }
    @media (min-width: 320px) and (max-width: 767px) {
      .acc-switcher__wrapper {
        position: relative;
        top: unset;
        left: unset;
        right: unset;
        width: 100%;
        box-shadow: none;
        height: 100%;
        border-radius: 0; } }
    .acc-switcher__wrapper .dc-themed-scrollbars {
      scrollbar-color: var(--text-less-prominent) transparent; }
      .acc-switcher__wrapper .dc-themed-scrollbars::-webkit-scrollbar-thumb {
        background-color: var(--text-less-prominent); }
  .acc-switcher__new-account {
    display: flex;
    align-items: center;
    padding: 1rem 1.6rem 1.8rem;
    font-size: var(--text-size-xs); }
    .acc-switcher__new-account-text {
      margin-left: 0.8rem; }
    .acc-switcher__new-account-btn {
      margin-left: auto; }
    .acc-switcher__new-account--disabled {
      opacity: 0.5;
      cursor: default; }
  .acc-switcher__reset-account-btn {
    margin-left: auto; }
  .acc-switcher__list {
    border-radius: 4px;
    display: flex;
    flex-flow: column nowrap;
    height: 100%;
    background: var(--general-main-2); }
    .acc-switcher__list-wrapper {
      padding: 0.4rem 0.8rem 0; }
    .acc-switcher__list-title {
      flex: 1; }
    .acc-switcher__list-container {
      height: auto;
      overflow-x: hidden;
      overflow-y: auto; }
  .acc-switcher__help-icon {
    cursor: pointer;
    margin-left: 0.8rem;
    vertical-align: middle; }
  .acc-switcher__accounts {
    border-radius: 4px;
    background: var(--general-main-2);
    position: relative; }
    .acc-switcher__accounts .acc-switcher__account {
      margin-bottom: 2px;
      background: var(--general-main-2); }
      .acc-switcher__accounts .acc-switcher__account:hover:not(.acc-switcher__account--selected) {
        background-color: var(--state-hover);
        border-radius: 4px; }
      .acc-switcher__accounts .acc-switcher__account.acc-switcher__account--disabled:hover {
        background-color: var(--general-main-2); }
      .acc-switcher__accounts .acc-switcher__account .acc-switcher__id {
        color: var(--text-general);
        width: 100%;
        line-height: 1.43; }
      .acc-switcher__accounts .acc-switcher__account--selected {
        background: var(--state-active); }
        .acc-switcher__accounts .acc-switcher__account--selected .acc-switcher__id {
          color: var(--text-prominent);
          font-weight: 700; }
          .acc-switcher__accounts .acc-switcher__account--selected .acc-switcher__id--virtual:before {
            color: var(--text-prominent);
            border: 1px solid var(--text-prominent); }
      .acc-switcher__accounts .acc-switcher__account--disabled {
        opacity: 0.5;
        cursor: default; }
      .acc-switcher__accounts .acc-switcher__account:only-child {
        border-radius: 4px; }
      .acc-switcher__accounts .acc-switcher__account:last-child {
        margin-bottom: 8px; }
    .acc-switcher__accounts--is-loading {
      padding-bottom: 0.8rem; }
  .acc-switcher__account {
    display: flex;
    align-items: center;
    justify-content: space-between;
    cursor: pointer;
    padding: 0.3rem 1.6rem;
    position: relative;
    background: var(--general-main-2);
    text-decoration: none; }
    .acc-switcher__account .acc-switcher__id {
      font-size: 1.4rem;
      color: var(--text-general);
      font-weight: 400;
      text-transform: none;
      text-align: left;
      line-height: 1.5;
      align-items: center;
      display: flex;
      color: var(--text-prominent); }
      .acc-switcher__account .acc-switcher__id-icon {
        margin-right: 8px; }
    .acc-switcher__account:hover:not(.acc-switcher__account--selected) {
      background: var(--state-hover); }
    .acc-switcher__account--selected {
      background: var(--state-active);
      border-radius: 4px; }
      .acc-switcher__account--selected .acc-switcher__id {
        font-size: 1.4rem;
        color: var(--text-colored-background);
        font-weight: 700;
        text-transform: none;
        text-align: left;
        line-height: 1.5; }
        .acc-switcher__account--selected .acc-switcher__id--virtual:before {
          color: var(--text-prominent);
          border: 1px solid var(--text-prominent); }
      .acc-switcher__account--selected .acc-switcher__loginid-text {
        color: var(--text-prominent);
        font-weight: normal; }
      .acc-switcher__account--selected .no-currency {
        color: var(--text-prominent); }
  .acc-switcher__footer {
    align-items: center;
    display: grid;
    grid-template-columns: auto auto;
    justify-content: space-between;
    padding-left: 1.3rem; }
  .acc-switcher__compare {
    justify-self: end;
    grid-column: 1 / 2; }
  .acc-switcher__logout {
    grid-column: 2 / 3;
    align-items: center;
    display: flex;
    justify-content: flex-end;
    justify-self: start;
    padding: 1.6em 1.3em; }
    .acc-switcher__logout-text {
      cursor: pointer; }
    .acc-switcher__logout-icon {
      margin-left: 8px;
      cursor: pointer; }
  .acc-switcher__balance {
    margin-left: auto; }
  .acc-switcher__separator {
    height: 4px;
    background-color: var(--general-section-2); }
    .acc-switcher__separator--no-padding {
      margin: 0 -8px; }
    .acc-switcher__separator--auto-margin {
      margin-top: auto; }
  .acc-switcher__total {
    height: 2.6rem;
    margin: 0.4rem 1.6rem;
    align-items: center;
    display: flex; }
    .acc-switcher__total-subtitle {
      margin: 0 1.6rem 1.2rem; }
  .acc-switcher__loginid-text {
    font-size: 1rem;
    color: var(--text-less-prominent);
    line-height: 1.4; }
    .acc-switcher__loginid-text--disabled {
      color: var(--text-disabled); }
  .acc-switcher__loader {
    margin: 1rem auto !important;
    font-size: 0.8rem; }
  .acc-switcher__btn {
    width: calc(100% - 32px);
    margin: 0 16px 8px; }

/** @define set-currency; weak */
.set-currency {
  margin-right: 8px; }
  .set-currency .dc-btn {
    display: flex;
    align-items: center; }
    @media (min-width: 320px) and (max-width: 767px) {
      .set-currency .dc-btn {
        height: 2.8rem !important; } }

/** @define no-currency; weak */
.no-currency {
  font-size: 0.8rem;
  color: var(--text-general);
  font-weight: 400;
  text-transform: none;
  text-align: center;
  line-height: unset;
  text-transform: none;
  color: var(--text-less-prominent);
  line-height: 1.5;
  text-align: right; }

/** @define badge-server; weak */
.badge-server {
  display: inline-block;
  background-color: #2a3052;
  padding: 0.2rem;
  border-radius: 0.2rem;
  margin-left: 0.5rem;
  height: 2.2rem; }
  .badge-server-bot {
    color: var(--text-colored-background); }
  .badge-server--disabled {
    background-color: var(--border-disabled); }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
/* @define platform-dropdown; weak */
.platform-dropdown {
  z-index: 5;
  background-color: var(--overlay-outside-dialog);
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  opacity: 0;
  transition: opacity 0.25s ease; }
  @media (min-width: 320px) and (max-width: 767px) {
    .platform-dropdown {
      position: absolute; }
      .platform-dropdown .platform-dropdown__list {
        position: absolute;
        top: 0;
        left: 0;
        width: 295px;
        padding-right: 1.6rem;
        background-color: var(--general-main-2);
        overflow-x: hidden;
        overflow-y: auto; }
        .platform-dropdown .platform-dropdown__list-platform {
          width: calc(100% - 1.6rem);
          margin: 1.4rem 1.6rem;
          padding: 1.4rem 1.6rem; } }
  .platform-dropdown--enter-done {
    opacity: 1; }
    .platform-dropdown--enter-done .platform-dropdown__list {
      transform: translateY(48px); }
  .platform-dropdown__list {
    background-color: var(--general-main-1);
    width: 100%;
    position: fixed;
    top: 0;
    transform: translateY(0px);
    transition: transform 0.25s ease; }
    @media (min-width: 1024px) {
      .platform-dropdown__list {
        display: flex;
        flex-wrap: wrap; } }
    .platform-dropdown__list-platform {
      position: relative;
      display: inline-flex;
      background-color: transparent;
      color: var(--text-general);
      text-decoration: none;
      margin: 2.4rem 1.6rem;
      padding: 2.4rem 1.6rem;
      width: 320px;
      border-radius: 0.8rem;
      /* postcss-bem-linter: ignore */ }
      .platform-dropdown__list-platform-icon {
        min-height: 32px;
        min-width: 32px;
        margin-right: 1.6rem; }
      .platform-dropdown__list-platform-title {
        font-size: 1.6rem;
        font-weight: bold;
        line-height: 2.4rem; }
      .platform-dropdown__list-platform-description {
        font-size: 1.4rem;
        line-height: 2rem;
        margin-top: 0.8rem; }
      .platform-dropdown__list-platform-background {
        opacity: 0;
        transition: opacity 0.25s ease;
        background-color: var(--general-hover);
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        z-index: -1;
        border-radius: inherit; }
      .platform-dropdown__list-platform.active {
        border: solid 2px var(--border-active); }
      .platform-dropdown__list-platform:not(.active):hover .platform-dropdown__list-platform__background {
        opacity: 1; }
      @media (min-width: 320px) and (max-width: 767px) {
        .platform-dropdown__list-platform {
          width: 302px; } }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
.platform-switcher {
  display: flex;
  align-items: center;
  padding: 0.8rem;
  transition: background-color 0.3s;
  cursor: pointer; }
  .platform-switcher:not(.platform-switcher--is-mobile):hover {
    background-color: var(--general-hover); }
  .platform-switcher svg:first-child,
  .platform-switcher p,
  .platform-switcher h1 {
    margin: 0 0 0 0.8rem; }
  .platform-switcher svg:last-child {
    margin: 0 0.8rem; }
  .platform-switcher__arrow {
    transition: transform 0.3s ease;
    transform: rotate(0deg); }
  .platform-switcher__arrow .color1-fill {
    fill: var(--text-general); }
  .platform-switcher__preloader {
    margin-top: 4px;
    align-self: center;
    width: 146px; }
    .platform-switcher__preloader--is-mobile {
      width: 162px; }
  .platform-switcher--active .platform-switcher__arrow {
    transform: rotate(180deg); }
  @media (min-width: 320px) and (max-width: 767px) {
    .platform-switcher {
      width: 100%;
      height: 100%;
      justify-content: center;
      -webkit-user-select: none;
         -moz-user-select: none;
          -ms-user-select: none;
              user-select: none;
      -webkit-touch-callout: none;
      -webkit-tap-highlight-color: transparent; } }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
.details-form {
  display: grid;
  align-content: start; }
  @media (min-width: 1024px) {
    .details-form {
      padding: 0 0.4rem; } }
  @media (min-width: 320px) and (max-width: 767px) {
    .details-form {
      overflow-x: hidden;
      overflow-y: auto; } }
  @media (min-width: 1024px) {
    .details-form__sub-header {
      margin: 0 4rem 4rem; } }
  @media (min-width: 320px) and (max-width: 767px) {
    .details-form__sub-header {
      margin-bottom: 0.8rem; } }
  .details-form__elements {
    flex-grow: 1;
    margin: 1.2rem auto;
    width: 45%; }
    .details-form__elements--wide {
      width: 45%; }
    .details-form__elements-container {
      height: calc(100% - 76px);
      overflow: hidden; }
      @media (min-width: 320px) and (max-width: 767px) {
        .details-form__elements-container {
          height: auto;
          width: calc(100% - 3.2rem);
          overflow: unset;
          margin: 1.6rem auto; } }
    .details-form__elements .dc-autocomplete {
      margin-bottom: 3.2rem; }
    .details-form__elements .dc-radio__input {
      margin-bottom: 2.4rem; }
    .details-form__elements .dc-input__label {
      top: 0.9rem; }
    .details-form__elements .dc-input label {
      top: 0.9rem;
      background-color: var(--general-main-2); }
      @media (min-width: 320px) and (max-width: 767px) {
        .details-form__elements .dc-input label {
          background-color: var(--fill-normal); } }
    @media (min-width: 1024px) {
      .details-form__elements .dc-input {
        /* To get rid of ugly chrome autofill shadow dom-applied background color */ }
        .details-form__elements .dc-input__field:-webkit-autofill {
          -webkit-box-shadow: 0 0 0 30px var(--fill-normal) inset !important; }
          .details-form__elements .dc-input__field:-webkit-autofill:hover, .details-form__elements .dc-input__field:-webkit-autofill:focus, .details-form__elements .dc-input__field:-webkit-autofill:active {
            -webkit-box-shadow: 0 0 0 30px var(--fill-normal) inset !important; } }
    .details-form__elements .dc-datepicker__input .dc-input__field {
      background-color: var(--fill-normal); }
    .details-form__elements .dc-select-native {
      margin-bottom: 3.2rem; }
    .details-form__elements .dc-dropdown__display {
      background-color: var(--general-main-2); }
      .details-form__elements .dc-dropdown__display-placeholder-text {
        background-color: var(--general-main-2); }
    .details-form__elements .dc-dropdown__container {
      margin-bottom: 3rem; }
    @media (min-width: 320px) and (max-width: 767px) {
      .details-form__elements {
        width: 100%;
        margin: 0;
        padding: 1rem 1.6rem 6rem;
        overflow-y: auto; } }
  .details-form__loader .barspinner {
    margin-top: 0.4rem;
    margin-bottom: 3.2rem; }
  .details-form__tax {
    position: relative; }
    @media (min-width: 320px) and (max-width: 767px) {
      .details-form__tax {
        padding-right: 2rem; } }
    .details-form__tax .dc-popover {
      position: absolute;
      cursor: pointer;
      top: 10px;
      right: -25px; }
      @media (min-width: 320px) and (max-width: 767px) {
        .details-form__tax .dc-popover {
          right: -5px; } }
  .details-form__tin-warn-divider {
    height: 5rem; }
    @media (min-width: 320px) and (max-width: 767px) {
      .details-form__tin-warn-divider {
        height: 6rem; } }
  .details-form__tin-confirm {
    margin-left: -5px; }
    .details-form__tin-confirm .dc-checkbox__box {
      align-self: baseline; }
  .details-form .dc-page-error__container {
    height: 100%; }
  .details-form__description {
    margin: 1.6rem auto;
    width: 45%; }
    @media (min-width: 1024px) {
      .details-form__description {
        display: flex;
        flex-direction: column; } }
    @media (min-width: 768px) and (max-width: 1023px) {
      .details-form__description {
        width: 70%; } }
    @media (min-width: 320px) and (max-width: 767px) {
      .details-form__description {
        text-align: left;
        width: unset;
        margin: 0 2.4rem;
        line-height: 20px;
        color: var(--text-less-prominent); } }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
.add-or-manage {
  flex-direction: row;
  /* fix for Safari */
  flex-wrap: wrap;
  height: 100%; }
  .add-or-manage .dc-tabs__content {
    display: flex;
    flex-direction: column; }
  .add-or-manage .dc-tabs__list--header-fit-content {
    margin: 0 auto; }
  .add-or-manage .account-wizard--disabled-message p:first-child {
    background-color: var(--general-section-1);
    font-size: 1.2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 4px; }
  .add-or-manage .currency-selector__radio-group--is-header {
    font-size: 1.6rem;
    font-weight: bold;
    font-stretch: normal;
    font-style: normal;
    line-height: 1.5;
    letter-spacing: normal;
    color: var(--text-general);
    text-align: center; }
  .add-or-manage .currency-selector__description {
    display: none; }
  .add-or-manage .currency-selector__deposit-warn {
    width: 78%;
    margin: 2.8rem auto;
    padding: 10px;
    background-color: var(--general-section-1);
    border-radius: 4px; }
  .add-or-manage__with-margin--is-header {
    font-size: 1.6rem;
    font-weight: bold;
    font-stretch: normal;
    font-style: normal;
    line-height: 1.5;
    letter-spacing: normal;
    color: var(--text-general);
    text-align: center; }
  @media (min-width: 1024px) {
    .add-or-manage .currency-selector__radio-group--with-margin {
      margin-bottom: 6rem;
      margin-left: auto;
      margin-right: auto;
      width: 768px; }
    .add-or-manage .dc-form-submit-button--absolute {
      position: fixed;
      padding: 1.6rem;
      width: 100%;
      right: 0; } }
  @media (min-width: 320px) and (max-width: 767px) {
    .add-or-manage {
      flex-wrap: unset; }
      .add-or-manage .account-wizard__btn-area .dc-btn,
      .add-or-manage .account-wizard__btn-area .dc-btn:last-child {
        min-width: unset;
        margin: 0 1.6rem; }
      .add-or-manage .currency-selector__radio-group--with-margin {
        margin-bottom: 7rem; }
      .add-or-manage .change-currency .currency-list__items {
        margin-bottom: 12rem; }
      .add-or-manage .change-currency .dc-form-submit-button--relative {
        position: fixed;
        background-color: unset;
        right: 0; }
      .add-or-manage .account-wizard--disabled-message p:first-child {
        width: 100%;
        height: 7.5rem;
        margin-top: 0.6rem;
        padding: 0 1rem; }
      .add-or-manage .account-wizard--disabled .currency-list__items {
        margin-top: 1.6rem; }
      .add-or-manage .dc-form-submit-button {
        position: fixed;
        padding: 15px;
        height: 72px;
        bottom: 0;
        width: 100%;
        background-color: var(--fill-normal);
        border: 2px solid var(--general-section-1); }
        .add-or-manage .dc-form-submit-button button {
          width: 100%; } }

.status-dialog {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  position: relative;
  flex-grow: 1;
  padding: 2.4rem; }
  .status-dialog__close {
    position: absolute;
    cursor: pointer;
    top: 1.8rem;
    right: 1.8rem; }
  .status-dialog__header {
    display: flex;
    align-items: center;
    width: auto;
    justify-content: center;
    position: relative; }
    .status-dialog__header .bottom-right-overlay {
      position: absolute;
      bottom: 2rem;
      right: 0;
      width: 3rem;
      height: 3rem; }
    .status-dialog__header svg.inline-icon {
      width: 90px;
      height: 120px; }
    .status-dialog__header svg {
      display: block; }
      .status-dialog__header svg.dc-icon--red {
        margin: 0 1rem; }
      @media (min-width: 320px) and (max-width: 767px) {
        .status-dialog__header svg {
          max-width: 96px;
          height: auto; } }
    .status-dialog__header--xlarge, .status-dialog__header--large {
      width: auto;
      flex-grow: 1; }
      .status-dialog__header--xlarge .bottom-right-overlay, .status-dialog__header--large .bottom-right-overlay {
        width: 4.8rem;
        height: 4.8rem;
        right: -1rem;
        bottom: -1rem; }
        @media (min-width: 320px) and (max-width: 767px) {
          .status-dialog__header--xlarge .bottom-right-overlay, .status-dialog__header--large .bottom-right-overlay {
            max-width: 3.6rem;
            height: auto; } }
      @media (min-width: 320px) and (max-width: 767px) {
        .status-dialog__header--xlarge, .status-dialog__header--large {
          flex-grow: 0; } }
    .status-dialog__header--xlarge svg:first-child {
      width: 12.8rem;
      height: 12.8rem; }
    .status-dialog__header--large svg.inline-icon {
      width: 12rem;
      height: 12rem; }
    .status-dialog__header--center {
      justify-content: center;
      width: auto;
      margin-top: 3rem; }
    .status-dialog__header--set-currency svg:first-child {
      margin: 0 auto; }
    .status-dialog__header--set-currency .bottom-right-overlay {
      bottom: 2rem; }
  .status-dialog__body {
    flex-grow: 1; }
    .status-dialog__body--no-grow {
      flex-grow: 0;
      margin-bottom: 3.2rem; }
  .status-dialog__message-header {
    margin: 1rem 0 0.8rem; }
    @media (min-width: 320px) and (max-width: 767px) {
      .status-dialog__message-header {
        line-height: 24px;
        margin-top: 1.6rem; } }
  .status-dialog__message-text {
    padding: 0.2rem 0; }
    @media (min-width: 320px) and (max-width: 767px) {
      .status-dialog__message-text {
        padding: 0 1rem;
        line-height: 2rem; } }
  .status-dialog__footer {
    display: flex;
    width: 100%;
    flex-direction: column;
    margin: 1.4rem 0 0; }
    .status-dialog__footer .dc-btn {
      margin: 0.4rem;
      height: 4rem;
      border-width: 2px; }
      @media (min-width: 320px) and (max-width: 767px) {
        .status-dialog__footer .dc-btn {
          margin: 0.4rem 1.4rem; } }
  @media (min-width: 1024px) {
    .status-dialog {
      width: 38.4rem;
      min-height: 35.2rem; } }
  @media (min-width: 320px) and (max-width: 767px) {
    .status-dialog {
      justify-content: flex-start;
      width: 100%;
      height: 100%;
      padding: 6rem 0 0; } }

.dc-mobile-dialog--enter-done .dc-mobile-dialog__content {
  transform: unset; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
.change-currency {
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px; }
  .change-currency__title, .change-currency__sub-title {
    text-transform: none; }
  .change-currency__title {
    margin-top: 3rem; }
  .change-currency__sub-title {
    margin-bottom: 1.6rem; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
.set-currency-modal {
  text-align: center; }
  .set-currency-modal__heading-container {
    margin: 2rem auto;
    color: var(--text-general); }
    @media (min-width: 320px) and (max-width: 767px) {
      .set-currency-modal__heading-container__main-heading {
        padding: 0 3rem; } }
    .set-currency-modal__heading-container__sub-heading {
      font-stretch: normal;
      font-style: normal;
      letter-spacing: normal;
      margin-top: 2rem; }
  .set-currency-modal .currency-selector {
    min-height: 390px; }
    .set-currency-modal .currency-selector__radio-group--is-header {
      font-size: 1.6rem;
      font-weight: bold;
      font-stretch: normal;
      font-style: normal;
      line-height: 1.5;
      letter-spacing: normal;
      color: var(--text-general); }
    .set-currency-modal .currency-selector__description {
      display: none; }
    @media (min-width: 1024px) {
      .set-currency-modal .currency-selector__crypto .currency-list__items {
        margin-bottom: 9rem; }
      .set-currency-modal .currency-selector .dc-form-submit-button {
        position: fixed;
        right: 0;
        bottom: 0;
        padding: 1.3rem;
        background-color: var(--general-main-1); }
        .set-currency-modal .currency-selector .dc-form-submit-button--center {
          justify-content: flex-end;
          height: unset; }
      .set-currency-modal .currency-selector .dc-modal-footer {
        background-color: var(--general-main-1);
        position: fixed;
        right: 0;
        width: 100%;
        bottom: 3.5rem; } }
    @media (min-width: 320px) and (max-width: 767px) {
      .set-currency-modal .currency-selector {
        overflow-y: auto; }
        .set-currency-modal .currency-selector__container--no-top-margin {
          height: unset; }
        .set-currency-modal .currency-selector .dc-form-submit-button {
          position: fixed; }
          .set-currency-modal .currency-selector .dc-form-submit-button button {
            width: 100%; }
        .set-currency-modal .currency-selector .dc-modal-footer {
          background-color: var(--general-main-1);
          position: fixed;
          right: 0;
          bottom: 0;
          width: 100%; } }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
.dc-modal__container_real-account-signup-modal {
  display: flex;
  flex-direction: column;
  transition: all 0.3s ease-in-out;
  background-color: var(--general-main-1); }
  @media (min-width: 768px) and (max-width: 1023px) {
    .dc-modal__container_real-account-signup-modal {
      max-height: calc(100vh - 102px) !important; } }
  .dc-modal__container_real-account-signup-modal--success {
    border-radius: 4px;
    overflow: hidden;
    max-width: 478px;
    min-width: 0 !important;
    min-width: initial !important;
    max-height: none !important;
    max-height: initial !important; }
  .dc-modal__container_real-account-signup-modal .dc-modal-header__title {
    text-transform: none;
    border-top-left-radius: 1em; }
  .dc-modal__container_real-account-signup-modal--error .account-wizard--error {
    display: flex;
    align-items: center;
    justify-content: start;
    flex-direction: column;
    height: 100%;
    width: 100%;
    padding-top: 10rem; }
  .dc-modal__container_real-account-signup-modal--error > svg {
    width: 128px;
    height: 128px;
    align-self: center;
    margin: 2em 0 0; }
  .dc-modal__container_real-account-signup-modal--error h1 {
    font-size: 1.6rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    text-align: center;
    line-height: 1.75;
    text-transform: none;
    color: var(--text-general);
    margin: 1.6rem 0 0.8rem; }
  .dc-modal__container_real-account-signup-modal--error p {
    font-size: 1.4rem;
    color: var(--text-prominent);
    font-weight: 400;
    text-transform: none;
    text-align: center;
    line-height: 1.5;
    text-transform: none;
    width: 80%;
    margin-bottom: 2.4rem; }
  .dc-modal__container_real-account-signup-modal--error a.dc-btn {
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    text-align: center;
    line-height: 1.5;
    text-transform: none;
    text-decoration: none;
    color: var(--text-colored-background);
    display: flex;
    align-items: center;
    justify-content: center;
    align-self: center; }
  .dc-modal__container_real-account-signup-modal--error a.email-inline {
    color: var(--brand-red-coral);
    font-weight: bold;
    text-decoration: none; }
  .dc-modal__container_real-account-signup-modal--error span.chat-inline {
    color: var(--brand-red-coral);
    font-weight: bold;
    text-decoration: none;
    cursor: pointer; }
  .dc-modal__container_real-account-signup-modal--loading {
    width: 300px;
    max-height: 300px; }
    .dc-modal__container_real-account-signup-modal--loading .dc-modal-header__title {
      height: 0; }
  .dc-modal__container_real-account-signup-modal .dc-themed-scrollbars {
    height: 100%; }

.dc-mobile-dialog__account-signup-mobile-dialog .account-wizard--error p {
  text-align: center; }

.dc-mobile-dialog__account-signup-mobile-dialog .account-wizard--error span.chat-inline {
  color: var(--brand-red-coral);
  font-weight: bold;
  text-decoration: none;
  cursor: pointer;
  display: block;
  text-align: center; }

.dc-modal-header--real-account-signup-modal {
  border-bottom: 1px solid var(--general-section-1); }

.account-wizard {
  display: grid;
  grid-template-rows: 13rem minmax(10rem, 1fr);
  height: calc(100% - 57px);
  position: relative;
  width: 100%; }
  @media (min-width: 1024px) {
    .account-wizard--deriv-crypto {
      grid-template-rows: 0 !important; }
    .account-wizard .currency-list__items__is-crypto {
      margin-bottom: 9rem; }
    .account-wizard .dc-input__label {
      background-color: var(--fill-normal) !important; }
    .account-wizard .dc-modal-footer {
      background-color: var(--general-main-1);
      z-index: 1; } }
  @media (min-width: 320px) and (max-width: 767px) {
    .account-wizard {
      grid-template-rows: 5rem minmax(10rem, 1fr);
      overflow: hidden; }
      .account-wizard--set-currency {
        grid-template-rows: 1fr 70px; } }
  .account-wizard.add-or-manage {
    grid-template-rows: 1fr 1fr; }
    .account-wizard.add-or-manage .dc-form-submit-button {
      padding: 2rem; }
    @media (min-width: 1024px) {
      .account-wizard.add-or-manage form {
        grid-template-rows: auto; } }
    @media (min-width: 320px) and (max-width: 767px) {
      .account-wizard.add-or-manage {
        grid-template-rows: 1fr 1fr;
        overflow-y: auto;
        overflow-x: hidden; } }
  .account-wizard > h2 {
    text-transform: none;
    margin-top: 2.4rem;
    font-size: 1.6rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    text-align: center;
    line-height: 1.75;
    color: var(--text-less-prominent); }
    @media (min-width: 320px) and (max-width: 767px) {
      .account-wizard > h2 {
        margin-top: 0.8rem;
        font-size: 1.2rem; } }
  .account-wizard > h3 {
    font-size: 1.2rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: none;
    text-align: center;
    line-height: 1.25;
    text-transform: none;
    color: var(--text-general);
    margin-bottom: 1.6rem; }
  .account-wizard form {
    width: 100%;
    height: 100%; }
    @media (min-width: 768px) {
      .account-wizard form {
        display: grid;
        grid-template-rows: minmax(20rem, 1fr); } }
    .account-wizard form .currency-selector__radio-group {
      display: flex;
      flex-direction: column;
      flex-grow: 1;
      justify-content: center;
      align-items: center; }
      .account-wizard form .currency-selector__radio-group--is-header {
        font-size: 1.6rem;
        margin: 2rem 0 0;
        font-weight: bold;
        color: var(--text-prominent); }
    .account-wizard form .currency-selector__description {
      margin-top: 2.4rem;
      font-size: 1.4rem;
      color: var(--text-prominent);
      font-weight: 400;
      text-transform: none;
      text-align: center;
      line-height: 1.5; }
      @media (min-width: 320px) and (max-width: 767px) {
        .account-wizard form .currency-selector__description {
          text-align: center; } }
    .account-wizard form .currency-selector__container {
      width: 100%; }
      @media (min-width: 320px) and (max-width: 767px) {
        .account-wizard form .currency-selector__container {
          overflow-x: hidden;
          overflow-y: auto; }
          .account-wizard form .currency-selector__container--no-top-margin {
            margin-top: 0; } }
    .account-wizard form .currency-selector__button {
      margin-top: 1.6rem; }
    @media (min-width: 320px) and (max-width: 767px) {
      .account-wizard form .currency-selector--deriv-account {
        border-top: 2px solid var(--general-section-1);
        padding-top: 10px; }
        .account-wizard form .currency-selector--deriv-account .dc-btn:last-child {
          width: 90%;
          margin: 0 auto; } }
  .account-wizard__body {
    display: flex; }
    @media (min-width: 768px) and (max-width: 1023px) {
      .account-wizard__body .details-form {
        grid-template-rows: minmax(10rem, 1fr); } }
  .account-wizard__set-currency p {
    margin: 2.4rem 0;
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: none;
    text-align: center;
    line-height: 1.5;
    text-transform: initial;
    color: var(--text-prominent); }
    @media (min-width: 320px) and (max-width: 767px) {
      .account-wizard__set-currency p {
        font-size: 1.2rem;
        margin: 2.4rem auto 0 2.4rem;
        text-align: left; } }
  @media (min-width: 320px) and (max-width: 767px) {
    .account-wizard__set-currency h2 {
      font-size: 1.2rem;
      text-align: left;
      margin-left: 2.4rem; } }
  .account-wizard .checkbox {
    align-items: center;
    margin: 1rem 0 0; }
    .account-wizard .checkbox__box--active {
      background-color: var(--brand-red-coral); }
    .account-wizard .checkbox__box--active:after {
      font-size: 1.3rem;
      line-height: 20px; }
    .account-wizard .checkbox__label {
      font-size: 1.4rem;
      color: var(--text-general);
      font-weight: 400;
      text-transform: none;
      text-align: left;
      line-height: 1.5;
      text-transform: none; }
  .account-wizard--disabled {
    position: relative; }
    .account-wizard--disabled .currency-list__items {
      margin-top: 2.4rem; }
    .account-wizard--disabled .currency-list__item {
      pointer-events: none; }
      .account-wizard--disabled .currency-list__item svg {
        opacity: 0.08; }
      .account-wizard--disabled .currency-list__item .label {
        color: var(--text-disabled); }
    .account-wizard--disabled-message {
      display: flex;
      justify-content: center; }
      .account-wizard--disabled-message-description {
        margin-top: 2.4rem;
        width: 78%;
        background-color: var(--general-section-1);
        padding: 0.8rem 0;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 4px; }
  @media (min-width: 320px) and (max-width: 767px) {
    .account-wizard--error {
      margin-top: 40px;
      display: flex;
      flex-direction: column;
      align-items: center; }
      .account-wizard--error h1 {
        font-size: 2.4rem;
        text-align: center;
        font-weight: bold;
        line-height: 1.5;
        color: var(--text-prominent); }
      .account-wizard--error p {
        font-size: 1.4rem;
        margin: 1.6rem;
        line-height: 1.4;
        color: var(--text-general); }
      .account-wizard--error .dc-btn {
        height: 4rem; }
      .account-wizard--error .dc-ion {
        width: 100%;
        max-width: 96px;
        margin-top: 2rem;
        height: auto; }
    .account-wizard__header-steps {
      padding: 1.6rem 0 0;
      width: 100%; }
      .account-wizard__header-steps-title {
        padding: 0 1.6rem 0.8rem; }
      .account-wizard__header-steps-subtitle {
        padding: 1.6rem 1.6rem 0; } }

.add-crypto-currency,
.change-currency {
  height: 100%; }
  .add-crypto-currency__title,
  .change-currency__title {
    margin-top: 3rem; }
  .add-crypto-currency__sub-title,
  .change-currency__sub-title {
    margin-bottom: 1rem; }
  .add-crypto-currency__button,
  .change-currency__button {
    margin-top: 1.6rem;
    width: 100%; }
  @media (min-width: 320px) and (max-width: 767px) {
    .add-crypto-currency .dc-form-submit-button,
    .change-currency .dc-form-submit-button {
      position: fixed;
      bottom: 0;
      width: 100%;
      padding: 1.5rem; }
    .add-crypto-currency .dc-btn,
    .change-currency .dc-btn {
      width: 100%; } }

/* TODO: [refactor-components] Refactor form subheader to components */
.account-form__header {
  font-size: var(--text-size-xs);
  font-weight: bold;
  margin-bottom: 1.6rem;
  position: relative;
  height: 1.6rem;
  white-space: nowrap; }
  .account-form__header-section {
    display: flex;
    align-items: center;
    justify-content: flex-start; }
  .account-form__header-section:after {
    border-top: 1px solid var(--general-section-1);
    content: '';
    height: 100%;
    width: 100%;
    margin-top: 0.3rem; }
    @media (min-width: 320px) and (max-width: 767px) {
      .account-form__header-section:after {
        border-top-color: var(--general-disabled); } }
  .account-form__header--has-description {
    margin-bottom: 0.5rem; }

.account-form__header:not(:first-child) {
  margin-top: 1.6rem; }

.account-form__title {
  padding-right: 0.8rem; }

.account-form__subtitle {
  align-self: baseline;
  padding-right: 0.8rem;
  margin-top: 0.2rem; }

.account-form__description {
  font-size: 1.2rem;
  font-weight: normal;
  color: var(--text-prominent);
  margin-bottom: 2rem;
  line-height: 1.5; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
.modal__container.modal__real-account-signup-modal .dc-vertical-tab__content {
  padding: 0 !important; }

.accept-risk__header {
  margin-bottom: 0.8rem;
  padding-top: 4rem; }
  @media (min-width: 320px) and (max-width: 767px) {
    .accept-risk__header {
      padding-top: 1rem; } }

.accept-risk__container {
  padding: 0 7.2rem; }
  @media (min-width: 320px) and (max-width: 767px) {
    .accept-risk__container {
      padding: 0 1.6rem; } }

.accept-risk__form {
  display: grid;
  height: calc(100% - 57px);
  position: relative;
  width: 100%; }

.account-signup-loader {
  width: 100%;
  height: 100%; }

@media (min-width: 768px) and (max-width: 904px) {
  .dc-modal__container_real-account-signup-modal {
    width: 768px !important; } }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
#dt_set_account_currency_modal .dc-btn--secondary {
  margin-right: 1rem; }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** @define notification-messages; */
.notification-messages {
  width: 40rem;
  z-index: 4;
  position: absolute;
  right: 0; }
  .notification-messages > div {
    display: flex;
    flex-direction: column;
    align-items: flex-end; }
  @media (min-width: 320px) and (max-width: 767px) {
    .notification-messages {
      max-width: calc(100% - 3.2rem);
      left: 1.6rem;
      right: 1.6rem; } }

/** @define notification; weak */
.notification {
  position: relative;
  display: flex;
  border-radius: 4px;
  width: 100%;
  max-width: 40rem;
  padding: 1.6rem;
  color: var(--text-prominent);
  background-color: var(--general-main-2);
  box-shadow: 0 4px 6px 0 var(--shadow-menu), 0 4px 6px 0 var(--shadow-menu);
  overflow: hidden;
  transition: transform 0.25s ease, opacity 0.25s linear; }
  .notification--enter-done {
    opacity: 1;
    transform: translateY(0); }
  .notification--enter, .notification--exit {
    opacity: 0;
    transform: translateY(-16px); }
  .notification--small {
    max-width: 28rem; }
  .notification__cta-button {
    padding: 0 0.8rem;
    margin-top: 1.6rem;
    height: 24px;
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
    max-width: 150px;
    align-self: flex-end; }
  .notification__text-container {
    display: flex;
    flex-direction: column;
    z-index: 2;
    width: 100%; }
  .notification__text-body {
    font-size: 1.4rem;
    line-height: 1.43; }
  .notification__action {
    display: flex;
    justify-content: flex-end; }
  .notification__header {
    margin-bottom: 0.8rem;
    margin-right: 3.2rem; }
  .notification__close-button {
    position: absolute;
    top: 0.4rem;
    right: 1.6rem;
    visibility: visible;
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
    z-index: 2; }
    .notification__close-button:focus, .notification__close-button:active {
      outline: none; }
    .notification__close-button:after {
      content: '\0000D7';
      font-size: 30px;
      font-weight: 300;
      color: var(--text-prominent); }
  .notification__icon-type {
    margin-right: 1.6rem;
    margin-top: 0.4rem;
    width: 1.6rem;
    height: 1.6rem; }
    .notification__icon-type--is-background {
      width: 21rem;
      height: 21rem; }
  .notification__icon-background {
    position: absolute;
    left: -25px;
    bottom: -5px;
    pointer-events: none;
    opacity: 0.07;
    z-index: 0; }
  .notification:not(:last-child) {
    margin-bottom: 16px; }
  @media (min-width: 320px) and (max-width: 767px) {
    .notification {
      max-width: 328px;
      width: calc(100% - 0.8rem);
      margin-right: 0.4rem; } }

/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon.active;
        }
*/
.advanced-simple-toggle__icon, .footer__link:hover .footer__icon, .footer__icon, .account-settings-toggle svg, .side-menu__icon {
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */ }
  .advanced-simple-toggle__icon .color1-fill, .footer__link:hover .footer__icon .color1-fill, .footer__icon .color1-fill, .account-settings-toggle svg .color1-fill, .side-menu__icon .color1-fill {
    fill: var(--text-general); }
  .advanced-simple-toggle__icon .color1-stroke, .footer__link:hover .footer__icon .color1-stroke, .footer__icon .color1-stroke, .account-settings-toggle svg .color1-stroke, .side-menu__icon .color1-stroke {
    stroke: var(--text-general); }
  .advanced-simple-toggle__icon .color2-fill, .footer__link:hover .footer__icon .color2-fill, .footer__icon .color2-fill, .account-settings-toggle svg .color2-fill, .side-menu__icon .color2-fill {
    fill: none; }
  .advanced-simple-toggle__icon .color2-stroke, .footer__link:hover .footer__icon .color2-stroke, .footer__icon .color2-stroke, .account-settings-toggle svg .color2-stroke, .side-menu__icon .color2-stroke {
    stroke: none; }
  .active.advanced-simple-toggle__icon, .header__menu-link--active .header__icon, .footer__link:hover .active.footer__icon, .active.footer__icon, .ic-settings--active .ic-settings__icon, .account-settings-toggle svg.active, .account-settings-toggle:hover svg, .active.side-menu__icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .active.advanced-simple-toggle__icon .color1-fill, .header__menu-link--active .header__icon .color1-fill, .active.footer__icon .color1-fill, .ic-settings--active .ic-settings__icon .color1-fill, .account-settings-toggle svg.active .color1-fill, .account-settings-toggle:hover svg .color1-fill, .active.side-menu__icon .color1-fill {
      fill: var(--text-prominent); }
    .active.advanced-simple-toggle__icon .color1-stroke, .header__menu-link--active .header__icon .color1-stroke, .active.footer__icon .color1-stroke, .ic-settings--active .ic-settings__icon .color1-stroke, .account-settings-toggle svg.active .color1-stroke, .account-settings-toggle:hover svg .color1-stroke, .active.side-menu__icon .color1-stroke {
      stroke: var(--text-prominent); }
    .active.advanced-simple-toggle__icon .color2-fill, .header__menu-link--active .header__icon .color2-fill, .active.footer__icon .color2-fill, .ic-settings--active .ic-settings__icon .color2-fill, .account-settings-toggle svg.active .color2-fill, .account-settings-toggle:hover svg .color2-fill, .active.side-menu__icon .color2-fill {
      fill: none; }
    .active.advanced-simple-toggle__icon .color2-stroke, .header__menu-link--active .header__icon .color2-stroke, .active.footer__icon .color2-stroke, .ic-settings--active .ic-settings__icon .color2-stroke, .account-settings-toggle svg.active .color2-stroke, .account-settings-toggle:hover svg .color2-stroke, .active.side-menu__icon .color2-stroke {
      stroke: none; }
  .disabled.advanced-simple-toggle__icon, .footer__link:hover .disabled.footer__icon, .disabled.footer__icon, .account-settings-toggle svg.disabled, .disabled.side-menu__icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .disabled.advanced-simple-toggle__icon .color1-fill, .disabled.footer__icon .color1-fill, .account-settings-toggle svg.disabled .color1-fill, .disabled.side-menu__icon .color1-fill {
      fill: var(--text-disabled); }
    .disabled.advanced-simple-toggle__icon .color1-stroke, .disabled.footer__icon .color1-stroke, .account-settings-toggle svg.disabled .color1-stroke, .disabled.side-menu__icon .color1-stroke {
      stroke: var(--text-disabled); }
    .disabled.advanced-simple-toggle__icon .color2-fill, .disabled.footer__icon .color2-fill, .account-settings-toggle svg.disabled .color2-fill, .disabled.side-menu__icon .color2-fill {
      fill: none; }
    .disabled.advanced-simple-toggle__icon .color2-stroke, .disabled.footer__icon .color2-stroke, .account-settings-toggle svg.disabled .color2-stroke, .disabled.side-menu__icon .color2-stroke {
      stroke: none; }
  .white.advanced-simple-toggle__icon, .footer__link:hover .white.footer__icon, .white.footer__icon, .account-settings-toggle svg.white, .white.side-menu__icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .white.advanced-simple-toggle__icon .color1-fill, .white.footer__icon .color1-fill, .account-settings-toggle svg.white .color1-fill, .white.side-menu__icon .color1-fill {
      fill: var(--text-prominent); }
    .white.advanced-simple-toggle__icon .color1-stroke, .white.footer__icon .color1-stroke, .account-settings-toggle svg.white .color1-stroke, .white.side-menu__icon .color1-stroke {
      stroke: var(--text-prominent); }
  .border_hover_color.advanced-simple-toggle__icon, .footer__link:hover .border_hover_color.footer__icon, .border_hover_color.footer__icon, .account-settings-toggle svg.border_hover_color, .border_hover_color.side-menu__icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .border_hover_color.advanced-simple-toggle__icon .color1-fill, .border_hover_color.footer__icon .color1-fill, .account-settings-toggle svg.border_hover_color .color1-fill, .border_hover_color.side-menu__icon .color1-fill {
      fill: var(--text-prominent); }
    .border_hover_color.advanced-simple-toggle__icon .color1-stroke, .border_hover_color.footer__icon .color1-stroke, .account-settings-toggle svg.border_hover_color .color1-stroke, .border_hover_color.side-menu__icon .color1-stroke {
      stroke: var(--text-prominent); }
  .secondary.advanced-simple-toggle__icon, .footer__link:hover .secondary.footer__icon, .secondary.footer__icon, .account-settings-toggle svg.secondary, .secondary.side-menu__icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */ }
    .secondary.advanced-simple-toggle__icon .color1-fill, .secondary.footer__icon .color1-fill, .account-settings-toggle svg.secondary .color1-fill, .secondary.side-menu__icon .color1-fill {
      fill: var(--text-less-prominent); }
    .secondary.advanced-simple-toggle__icon .color1-stroke, .secondary.footer__icon .color1-stroke, .account-settings-toggle svg.secondary .color1-stroke, .secondary.side-menu__icon .color1-stroke {
      stroke: var(--text-less-prominent); }

/**
 * Define Breakpoints here.
 */
/* postcss-bem-linter: ignore */
html {
  font-size: 62.5%;
  /** TODO: define breakpoints */ }

/** @define body */
.body {
  position: relative;
  min-height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden; }

/* postcss-bem-linter: ignore */
*,
html,
.body {
  font-family: "IBM Plex Sans", sans-serif;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  box-sizing: border-box; }
  @media (min-width: 320px) and (max-width: 767px) {
    *,
    html,
    .body {
      -webkit-touch-callout: none;
      -webkit-tap-highlight-color: rgba(0, 0, 0, 0); } }

/** @define select */
.select {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  padding: 2px 3px;
  border: 1px solid var(--border-normal);
  border-radius: 4px; }

/** @define input */
.input {
  font-family: inherit;
  font-style: inherit;
  padding: 2px 3px;
  color: var(--text-general); }

::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: var(--text-general); }

::-moz-placeholder {
  /* Firefox 19+ */
  color: var(--text-general); }

:-ms-input-placeholder {
  /* IE 10+ */
  color: var(--text-general); }

:-moz-placeholder {
  /* Firefox 18- */
  color: var(--text-general); }

/** @define theme */
.theme--light {
  background: #ffffff; }

.theme--dark {
  background: #0e0e0e; }

/** @define container */
.container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  box-sizing: border-box; }

/** @define hidden */
.hidden {
  visibility: hidden !important;
  transition: none !important; }

/** @define absolute-center-v */
.absolute-center-v {
  position: absolute;
  margin: auto;
  top: 0;
  bottom: 0; }

/** @define link */
.link {
  color: var(--brand-red-coral);
  font-weight: bold;
  text-decoration: none; }
  .link:hover {
    text-decoration: underline;
    cursor: pointer; }
  .link--white {
    color: #ffffff; }
  .link--right {
    float: right; }
  .link--prominent {
    color: var(--text-prominent); }

/** @define icon */
.icon--centered {
  top: 0.8em;
  left: 5%; }

/** @define center-text */
.center-text {
  text-align: center; }

/** @define no-margin */
.no-margin {
  margin: 0; }

/** @define hr */
.hr {
  border-top: var(--general-section-1);
  display: block;
  height: 1px;
  border: 0;
  margin: 0.5em 0;
  padding: 0; }

/** @define deriv-app */
.deriv-app {
  height: 100%;
  overflow: hidden; }

/*------------------------------------*
 *  # Reset SCSS
 *  - to make browsers render all elements more consistently
 *  - Reference:  https://github.com/AdamMarsden/simple-typography/blob/master/_reset.scss
 *------------------------------------*/
/* stylelint-disable */
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
input,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block; }

html {
  height: 100%;
  font-size: 10px; }

body {
  line-height: 1;
  height: 100%; }

ol,
ul {
  list-style: none; }

blockquote,
q {
  quotes: none; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

strong {
  font-weight: bold; }

/* stylelint-enable */
:host,
:root {
  --text-size-xxxxs: 0.8rem;
  --text-size-xxxs: 1rem;
  --text-size-xxs: 1.2rem;
  --text-size-xs: 1.4rem;
  --text-size-s: 1.6rem;
  --text-size-xsm: 1.8rem;
  --text-size-sm: 2rem;
  --text-size-m: 2.4rem;
  --text-size-l: 3.2rem;
  --text-size-xl: 4.8rem;
  --text-size-xxl: 6.4rem;
  --text-lh-xxs: 1;
  --text-lh-xs: 1.25;
  --text-lh-s: 1.4;
  --text-lh-m: 1.5;
  --text-lh-l: 1.75;
  --text-lh-xl: 2;
  --text-lh-xxl: 2.4;
  --text-weight-lighter: lighter;
  --text-weight-normal: normal;
  --text-weight-bold: bold;
  --text-weight-bolder: bolder;
  --text-align-left: start;
  --text-align-right: right;
  --text-align-center: center;
  --brand-dark-grey: #0e0e0e;
  --brand-red-coral: #ff444f;
  --brand-orange: #ff6444;
  --brand-secondary: #85acb0;
  --wallet-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);
  --wallet-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);
  --wallet-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);
  --wallet-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);
  --wallet-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);
  --wallet-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);
  --wallet-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);
  --wallet-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);
  --wallet-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);
  --wallet-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);
  --wallet-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);
  --wallet-perfectmoney: gradient-perfectmoney;
  --wallet-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);
  --wallet-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);
  --wallet-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);
  --wallet-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);
  --wallet-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);
  --app-card-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);
  --app-card-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%); }
  :host .theme--light,
  :root .theme--light {
    --general-main-1: #ffffff;
    --general-main-2: #ffffff;
    --general-section-1: #f2f3f4;
    --general-section-2: #f2f3f4;
    --general-section-3: #fafafa;
    --general-disabled: #eaeced;
    --general-hover: #e6e9e9;
    --general-active: #d6dadb;
    --text-prominent: #333333;
    --text-general: #333333;
    --text-less-prominent: #999999;
    --text-disabled: #d6d6d6;
    --text-profit-success: #4bb4b3;
    --text-loss-danger: #ec3f3f;
    --text-red: #ff444f;
    --text-blue: #0796e0;
    --text-colored-background: #ffffff;
    --icon-light-background: #5c5c5c;
    --icon-dark-background: #ffffff;
    --icon-grey-background: #f2f3f4;
    --purchase-main-1: #4bb4b3;
    --purchase-section-1: #3d9494;
    --purchase-main-2: #ec3f3f;
    --purchase-section-2: #d33636;
    --purchase-disabled-main: #eaeced;
    --purchase-disabled-section: #e6e9e9;
    --button-primary-default: var(--brand-red-coral);
    --button-secondary-default: #999999;
    --button-tertiary-default: transparent;
    --button-primary-light-default: rgba(255, 68, 79, 0.16);
    --button-primary-hover: #eb3e48;
    --button-secondary-hover: rgba(0, 0, 0, 0.08);
    --button-tertiary-hover: rgba(255, 68, 79, 0.08);
    --button-primary-light-hover: rgba(255, 68, 79, 0.24);
    --button-toggle-primary: #0796e0;
    --button-toggle-secondary: #d6dadb;
    --overlay-outside-dialog: rgba(0, 0, 0, 0.72);
    --overlay-inside-dialog: rgba(255, 255, 255, 0.96);
    --shadow-menu: rgba(0, 0, 0, 0.16);
    --shadow-menu-2: rgba(0, 0, 0, 0.16);
    --shadow-drop: rgba(0, 0, 0, 0.08);
    --state-normal: #ffffff;
    --state-hover: #e6e9e9;
    --state-active: #d6dadb;
    --state-disabled: #eaeced;
    --border-normal: #d6dadb;
    --border-hover: #999999;
    --border-hover-1: #5c5c5c;
    --border-active: var(--brand-secondary);
    --border-disabled: #eaeced;
    --fill-normal: #ffffff;
    --fill-hover: #999999;
    --fill-active: var(--brand-secondary);
    --fill-disabled: #eaeced;
    --status-default: #eaeced;
    --status-adjustment: #999999;
    --status-danger: #ec3f3f;
    --status-success: #4bb4b3;
    --status-warning: #ffad3a;
    --status-transfer: #ff6444;
    --status-info: #377cfc;
    --status-colored-background: #ffffff;
    --dashboard-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);
    --dashboard-app: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);
    --payment-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);
    --payment-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);
    --payment-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);
    --payment-credit-and-debit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);
    --payment-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);
    --payment-usd-coin: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);
    --payment-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);
    --payment-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);
    --payment-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);
    --payment-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);
    --payment-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);
    --payment-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);
    --payment-deriv: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);
    --transparent-success: rgba(75, 180, 179, 0.92);
    --transparent-info: rgba(55, 124, 252, 0.16);
    /* TODO: change to styleguide later */
    --gradient-success: linear-gradient(to top, #ffffff, rgba(75, 180, 179, 0.16));
    --gradient-danger: linear-gradient(to top, #ffffff, rgba(255, 68, 79, 0.16));
    --contract-gradient-danger: linear-gradient(to top, #ffffff 85%, rgba(255, 68, 79, 0.16));
    --gradient-right-edge: linear-gradient(to right, rgba(255, 255, 255, 0) -5%, #ffffff 71%);
    --badge-white: #ffffff;
    --badge-blue: #0677af;
    --badge-violet: #2a3052;
    --badge-green: #00a79e; }
  :host .theme--dark,
  :root .theme--dark {
    --general-main-1: #0e0e0e;
    --general-main-2: #151717;
    --general-section-1: #151717;
    --general-section-2: #0e0e0e;
    --general-section-3: #242828;
    --general-disabled: #1d1f20;
    --general-hover: #242828;
    --general-active: #323738;
    --text-prominent: #ffffff;
    --text-general: #c2c2c2;
    --text-less-prominent: #6e6e6e;
    --text-disabled: #3e3e3e;
    --text-profit-success: #00a79e;
    --text-loss-danger: #cc2e3d;
    --text-red: #ff444f;
    --text-colored-background: #ffffff;
    --icon-light-background: #5c5c5c;
    --icon-dark-background: #ffffff;
    --icon-grey-background: #333333;
    --purchase-main-1: #00a79e;
    --purchase-section-1: #008079;
    --purchase-main-2: #cc2e3d;
    --purchase-section-2: #a32430;
    --purchase-disabled-main: #1d1f20;
    --purchase-disabled-section: #0e0e0e;
    --button-primary-default: var(--brand-red-coral);
    --button-secondary-default: #6e6e6e;
    --button-tertiary-default: transparent;
    --button-primary-light-default: rgba(255, 68, 79, 0.16);
    --button-primary-hover: #eb3e48;
    --button-secondary-hover: rgba(255, 255, 255, 0.08);
    --button-tertiary-hover: rgba(255, 68, 79, 0.08);
    --button-primary-light-hover: rgba(255, 68, 79, 0.24);
    --button-toggle-primary: #0796e0;
    --button-toggle-secondary: #323738;
    --overlay-outside-dialog: rgba(0, 0, 0, 0.72);
    --overlay-inside-dialog: rgba(14, 14, 14, 0.96);
    --shadow-menu: rgba(0, 0, 0, 0.84);
    --shadow-menu-2: rgba(0, 0, 0, 0.72);
    --shadow-drop: rgba(0, 0, 0, 0.64);
    --state-normal: #0e0e0e;
    --state-hover: #242828;
    --state-active: #323738;
    --state-disabled: #1d1f20;
    --border-normal: #323738;
    --border-hover: #6e6e6e;
    --border-hover-1: #5c5c5c;
    --border-active: var(--brand-secondary);
    --border-disabled: #1d1f20;
    --fill-normal: #0e0e0e;
    --fill-hover: #6e6e6e;
    --fill-active: var(--brand-secondary);
    --fill-disabled: #1d1f20;
    --status-default: #eaeced;
    --status-adjustment: #999999;
    --status-danger: #cc2e3d;
    --status-warning: #ffad3a;
    --status-success: #00a79e;
    --status-transfer: #ff6444;
    --status-info: #377cfc;
    --status-colored-background: #ffffff;
    --transparent-success: rgba(0, 167, 158, 0.92);
    --transparent-info: rgba(55, 124, 252, 0.16);
    /* TODO: change to styleguide later */
    --gradient-success: linear-gradient(to top, #0e0e0e, rgba(0, 167, 158, 0.16));
    --gradient-danger: linear-gradient(to top, #0e0e0e, rgba(255, 68, 79, 0.16));
    --contract-gradient-danger: linear-gradient(to top, #0e0e0e 85%, rgba(255, 68, 79, 0.16));
    --gradient-right-edge: linear-gradient(to right, rgba(14, 14, 14, 0) -5%, #0e0e0e 71%);
    --badge-white: #ffffff;
    --badge-blue: #0677af;
    --badge-violet: #2a3052;
    --badge-green: #00a79e; }

.dashboard-platform-header {
  position: fixed;
  z-index: 99;
  width: 100%;
  height: 48px;
  left: 0px;
  top: 0px;
  box-sizing: border-box;
  border-bottom: 1px solid var(--general-section-1);
  background-color: var(--general-main-1);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  transition: opacity 0.3s;
  display: flex; }
  @media (min-width: 320px) and (max-width: 767px) {
    .dashboard-platform-header {
      height: 40px; } }
  .dashboard-platform-header__menu-left {
    display: inline-flex;
    height: 47px;
    align-items: center; }
    @media (min-width: 320px) and (max-width: 767px) {
      .dashboard-platform-header__menu-left {
        height: 39px; } }
    .dashboard-platform-header__menu-left-extensions {
      display: flex;
      overflow: hidden; }
  .dashboard-platform-header__menu-right {
    justify-content: flex-end;
    display: inline-flex;
    flex: 1;
    align-items: center; }
  .dashboard-platform-header__my-apps {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 13rem; }
    .dashboard-platform-header__my-apps > * {
      cursor: pointer; }
    .dashboard-platform-header__my-apps--title {
      margin-left: 8px; }
  .dashboard-platform-header__platform-information {
    display: flex;
    align-items: center; }
    .dashboard-platform-header__platform-information--icon {
      margin-right: 1.2rem; }
  .dashboard-platform-header__divider {
    width: 1px;
    height: 32px;
    margin-left: 8px;
    background: var(--general-section-2); }
    @media (min-width: 320px) and (max-width: 767px) {
      .dashboard-platform-header__divider {
        height: 24px; } }
  .dashboard-platform-header__setting {
    margin-right: 12px; }
    .dashboard-platform-header__setting--icon {
      cursor: pointer; }
  @media (min-width: 320px) and (max-width: 767px) {
    .dashboard-platform-header__notification .notifications-toggle {
      margin-right: 0; } }
  .dashboard-platform-header__report {
    margin-right: 24px; }
  .dashboard-platform-header__balance {
    display: flex;
    align-items: center; }
    .dashboard-platform-header__balance--icon {
      margin: 0px 8px; }
  .dashboard-platform-header__button {
    margin: 6px 16px; }
    @media (min-width: 320px) and (max-width: 767px) {
      .dashboard-platform-header__button {
        width: 5.4rem; } }
  .dashboard-platform-header__mobile-drawer-icon {
    margin: 12px 8px 12px 12px; }

@media (min-width: 320px) and (max-width: 767px) {
  /** disabling pull to refresh on iOS / Android browsers */
  /* postcss-bem-linter: ignore */
  body,
  .deriv-app,
  .modal-root,
  .dc-mobile-drawer__wrapper {
    /* Break the flow */
    position: absolute !important;
    top: 0 !important;
    /* Give them all the available space */
    width: 100%;
    height: 100%;
    /* Remove the margins if any */
    margin: 0;
    /* Allow them to scroll down the document */
    overflow-y: hidden !important;
    /* -webkit-touch-callout only is supported on iOS webkit engine, thus it should apply iOS only styles */ }
    @supports (-webkit-touch-callout: none) {
      body,
      .deriv-app,
      .modal-root,
      .dc-mobile-drawer__wrapper {
        position: fixed !important; } }
  .body {
    /* Sending body at the bottom of the stack */
    z-index: 1; }
  .deriv-app {
    /* Making the wrapper stack above the body */
    -ms-scroll-chaining: none;
        overscroll-behavior: none;
    z-index: 2; }
  .modal-root {
    height: 100% !important; }
  .popup-root > .dc-toast {
    top: 48px;
    z-index: 3;
    margin: auto;
    position: absolute; }
  .popup-root .dc-toast-popup {
    max-width: calc(100vw - 1.6rem);
    left: 1.6rem;
    width: calc(100vw - 3.2rem);
    top: 48px;
    position: absolute;
    right: 1.6rem; } }

/** @define landscape-blocker; weak */
.landscape-blocker {
  display: none;
  /* enable temporary landscape blocker UI in landscape */ }
  .landscape-blocker--visible {
    display: flex;
    position: fixed;
    top: 0;
    left: 0;
    overflow: hidden;
    width: 100%;
    height: 100%;
    background: var(--general-main-1);
    align-items: center;
    justify-content: center;
    flex-direction: column;
    color: var(--text-prominent);
    font-size: 1.6rem;
    z-index: 9999;
    font-weight: bold; }
    .landscape-blocker--visible__icon {
      width: 59px;
      height: 64px; }
    .landscape-blocker--visible__message {
      padding: 1.6rem 11rem;
      line-height: 1.4; }

/** @define app-contents; weak */
.app-contents {
  margin: 48px 0 36px;
  height: calc(100vh - 48px - 36px);
  overflow: hidden;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  background-color: var(--general-main-1); }
  .app-contents--is-disabled:after {
    opacity: 1;
    pointer-events: auto; }
  .app-contents--is-route-modal {
    background-color: var(--overlay-outside-dialog); }
  @media (min-width: 320px) and (max-width: 767px) {
    .app-contents {
      margin-bottom: 0;
      height: calc(100% - 40px);
      position: relative;
      margin-top: 40px; }
      .app-contents--is-scrollable {
        overflow-y: auto; }
      .app-contents--is-dashboard {
        height: calc(100% - 48px);
        margin-top: 48px; }
      .app-contents .ciq-menu {
        top: 0;
        margin: 0.8rem;
        z-index: 2; }
      .app-contents .cq-symbol-select-btn {
        padding: 0.3rem 0.9rem; }
        .app-contents .cq-symbol-select-btn .cq-symbol-dropdown {
          transform: scale(1);
          margin-left: auto; }
        .app-contents .cq-symbol-select-btn .cq-symbol {
          font-size: 1.2rem; }
        .app-contents .cq-symbol-select-btn .cq-chart-price {
          display: none; }
        .app-contents .cq-symbol-select-btn .cq-symbol-info {
          margin: 0 0.8rem;
          white-space: nowrap; }
        .app-contents .cq-symbol-select-btn .ic-icon:not(.cq-symbol-dropdown) > svg {
          padding: 0.4rem; }
      .app-contents .chart-container__loader {
        width: 100%;
        height: 100%;
        z-index: 1;
        top: 0; }
      .app-contents .contract-details-wrapper {
        height: inherit;
        position: relative;
        z-index: 1; }
      .app-contents .contract-audit-card {
        background-color: var(--general-section-1);
        border-radius: 4px; }
        .app-contents .contract-audit-card .contract-audit__wrapper {
          height: 100%; } }

/** @define sidebar; weak; */
.sidebar__container {
  position: relative;
  margin-left: 1.6em;
  width: 240px;
  margin-top: 8px;
  z-index: 1; }

.sidebar__items {
  opacity: 1;
  transform: none;
  position: relative;
  min-height: 460px;
  width: 240px; }
  .sidebar__items:after {
    transition: opacity 0.25s cubic-bezier(0.25, 0.1, 0.1, 0.25);
    opacity: 0;
    position: absolute;
    pointer-events: none;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 999;
    content: '';
    background-color: var(--overlay-outside-dialog); }
  .sidebar__items--market-closed .dc-tooltip--with-label {
    display: none; }
  .sidebar__items--market-closed .dc-tooltip--with-label:before,
  .sidebar__items--market-closed .dc-tooltip--with-label:after {
    display: none; }

/** @define popup-root */
.popup-root {
  position: absolute;
  z-index: 9999; }

/** @define contract */
.contract--enter {
  transform: translate3d(calc(100% + 1.6em), 0, 0);
  opacity: 0; }

.contract--exit {
  transform: translate3d(calc(100% + 1.6em), 0, 0);
  opacity: 0;
  pointer-events: none; }

/** @define advanced-simple-toggle */
.advanced-simple-toggle {
  display: flex;
  justify-content: center;
  align-items: center;
  /* margin shorthand for values below does not work */
  width: calc(100% + 16px);
  margin-top: 8px;
  margin-left: -8px;
  margin-bottom: -9px;
  margin-right: 0;
  padding: 8px 0;
  border-bottom-right-radius: 4px;
  border-bottom-left-radius: 4px;
  border: 0;
  background: none;
  transition: background-color 0.25s linear; }
  .advanced-simple-toggle__icon {
    transition: transform 0.2s ease; }
    .advanced-simple-toggle__icon--active {
      transform: rotate(180deg); }
  .advanced-simple-toggle:hover {
    cursor: pointer;
    background-color: var(--general-hover); }
  .advanced-simple-toggle:focus {
    outline: none; }

/** @define category-wrapper */
.category-wrapper {
  width: 2.4em;
  height: 2.4em;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--general-section-1); }

/** @define type-wrapper */
.type-wrapper {
  width: 2.4em;
  height: 2.4em;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--general-section-1);
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */ }
  .type-wrapper .color1-fill {
    fill: var(--brand-red-coral); }
  .type-wrapper .color2-fill {
    fill: var(--brand-secondary); }

/** @define no-scroll */
.no-scroll {
  overflow: hidden;
  max-height: 100vh; }

/** @define desktop-only */
@media (max-width: 768px) {
  .desktop-only {
    display: none !important; } }

/** @define mobile-only */
@media (min-width: 769px) {
  .mobile-only {
    display: none !important; } }

/** @define error */
.error__container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: calc(100vh - 9em); }

.error__message {
  color: var(--text-general); }
  .error__message {
    font-size: 14px; }
    @media screen and (min-width: 320px) {
      .error__message {
        font-size: calc(0.53571vw + 12.28571px); } }
    @media screen and (min-width: 1440px) {
      .error__message {
        font-size: 20px; } }

@-webkit-keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

/** @define header; weak */
.header {
  position: fixed;
  z-index: 99;
  box-sizing: border-box;
  height: 48px;
  width: 100%;
  top: 0;
  transition: opacity 0.3s;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  background-color: var(--general-main-1);
  border-bottom: 1px solid var(--general-section-1); }
  .header--is-disabled:after {
    opacity: 1;
    pointer-events: auto; }
  .header__menu-mobile-body-wrapper {
    position: relative;
    height: calc(100% - 3.6rem); }
  .header__menu-mobile-platform-switcher {
    position: absolute;
    height: 100%;
    top: 24px;
    left: 0; }
  .header__menu-mobile-theme {
    border-bottom: 1px solid var(--general-section-1);
    padding-bottom: 1.6rem;
    margin-bottom: 1.6rem; }
  .header__menu-mobile-link {
    text-decoration: none;
    display: flex;
    align-items: center; }
    .header__menu-mobile-link--active .header__menu-mobile-link-text {
      font-weight: bold;
      color: var(--text-prominent); }
    .header__menu-mobile-link-text {
      font-size: 1.4rem;
      color: var(--text-general); }
    .header__menu-mobile-link-icon {
      margin-right: 16px;
      width: 16px;
      height: 16px; }
    .header__menu-mobile-link-flag-icon {
      margin-right: 16px; }
    .header__menu-mobile-link-suffix-icon {
      width: 16px;
      height: 16px;
      margin-right: auto;
      margin-left: auto; }
    .header__menu-mobile-link-toggler-label {
      width: 48px;
      height: 25.6px;
      margin-left: auto;
      margin-right: 1.6rem; }
    .header__menu-mobile-link-toggler-button {
      width: 19.2px;
      height: 19.2px;
      top: 3px;
      left: 4px; }
      .header__menu-mobile-link-toggler-button--active {
        left: calc(100% - 4px) !important; }
  .header__menu-items {
    display: flex;
    position: relative;
    box-sizing: border-box;
    align-items: center;
    width: 100%;
    height: 100%; }
  .header__navbar-icons {
    cursor: pointer;
    padding: 0.8em 1.6em;
    align-self: center;
    height: 100%; }
    .header__navbar-icons--notify-toggle {
      order: 2;
      order: 2;
      padding: 0.5em 1em;
      width: 2em; }
  .header__menu-left {
    justify-content: flex-start;
    order: -1;
    display: inline-flex;
    flex: 1;
    height: 47px; }
    .header__menu-left-extensions {
      display: flex;
      align-items: center;
      overflow: hidden; }
  .header__menu-right {
    justify-content: flex-end;
    order: 1;
    display: inline-flex;
    height: 47px;
    position: relative; }
    .header__menu-right--hidden {
      display: none; }
    @media (min-width: 320px) and (max-width: 767px) {
      .header__menu-right .acc-info__separator {
        display: none; }
      .header__menu-right .notifications-toggle {
        margin-right: 0; } }
  .header__menu-toggle {
    align-self: center;
    display: flex; }
  .header__menu-links {
    height: 100%;
    align-self: center; }
    @media (max-width: 520px) {
      .header__menu-links {
        display: none; } }
  .header__menu-link {
    height: 100%;
    padding: 0 1.6em;
    text-decoration: none;
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: space-evenly;
    transition: background-color 0.3s;
    cursor: pointer; }
    .header__menu-link-text {
      font-size: 1.6rem;
      color: var(--text-general);
      font-weight: 400;
      text-transform: none;
      text-align: left;
      line-height: 1.75;
      padding: 0.5em 0;
      position: relative;
      color: var(--text-general);
      /* postcss-bem-linter: ignore */
      /* postcss-bem-linter: ignore */
      /* postcss-bem-linter: ignore */
      /* postcss-bem-linter: ignore */
      /* postcss-bem-linter: ignore */
      /* postcss-bem-linter: ignore */ }
      .header__menu-link-text .color1-fill {
        fill: var(--text-general); }
      .header__menu-link-text .color1-stroke {
        stroke: var(--text-general); }
      .header__menu-link-text .color2-fill {
        fill: none; }
      .header__menu-link-text .color2-stroke {
        stroke: none; }
      .header__menu-link-text .color3-fill {
        fill: var(--text-general); }
      .header__menu-link-text .color3-stroke {
        stroke: var(--text-general); }
      .header__menu-link-text:before {
        position: absolute;
        top: 1.4em;
        left: 1.2em; }
      .header__menu-link-text:after {
        display: block;
        content: attr(title);
        font-weight: 400;
        height: 0;
        overflow: hidden;
        visibility: hidden; }
    .header__menu-link:hover:not(.header__menu-link--active) {
      background-color: var(--general-hover); }
    .header__menu-link--active > .header__menu-link-text[title] {
      font-weight: bold;
      color: var(--text-prominent); }
      .header__menu-link--active > .header__menu-link-text[title]:after {
        color: var(--text-prominent); }
  .header__logo {
    background-color: var(--brand-secondary);
    border-radius: 10px;
    color: var(--text-colored-background);
    display: inline-block;
    font-size: 1.4rem;
    font-weight: normal;
    height: 20px;
    line-height: 1.43;
    text-align: center;
    width: 50px;
    margin-left: 8px; }
  .header__mobile-drawer-icon {
    width: 16px;
    height: 16px;
    transform: scale(1.3); }
  .header__mobile-drawer-toggle {
    padding: 0 1.2rem;
    border-right: 1px solid var(--general-section-1);
    display: flex;
    align-items: center;
    height: inherit; }
  .header__title {
    display: inline-block;
    font-weight: bold;
    color: var(--text-prominent); }
  .header__icon {
    margin-right: 0.8rem;
    vertical-align: middle; }
  @media (min-width: 320px) and (max-width: 767px) {
    .header {
      height: 40px; }
      .header .header__menu-left,
      .header .header__menu-right {
        height: 39px; } }

.dashboard-header {
  display: flex;
  align-items: center;
  position: fixed;
  z-index: 99;
  box-sizing: border-box;
  height: 48px;
  width: 100%;
  top: 0;
  transition: opacity 0.3s;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  padding: 0 4rem;
  justify-content: space-between; }
  @media (min-width: 320px) and (max-width: 767px) {
    .dashboard-header {
      padding: 0 0 0 1.6rem; } }
  .dashboard-header > * {
    align-items: center;
    display: flex; }
  .dashboard-header__left > * {
    cursor: pointer; }
  .dashboard-header__left--desktop-logo {
    margin-right: 0.684rem; }
  .dashboard-header--logged-in {
    background-color: var(--general-main-1);
    color: var(--brand-dark-grey);
    box-shadow: inset 0px -1px 0px var(--general-section-1); }
  .dashboard-header__right--logged-in > * {
    cursor: pointer; }
  .dashboard-header__right--logged-in-icon {
    margin-right: 0.8rem; }
  .dashboard-header__right--logged-in-separator {
    height: 48px;
    border-right: 1px solid var(--general-section-1);
    margin-left: 2rem; }
  @media (min-width: 320px) and (max-width: 767px) {
    .dashboard-header__right--create-button {
      display: none; } }
  .dashboard-header__right--logged-out-separator {
    height: 48px;
    border-right: 1px solid #151717;
    margin-left: 1.8rem; }
  .dashboard-header__right-hamburger {
    margin-left: 1.8rem;
    cursor: pointer; }
  .dashboard-header--logged-out {
    background-color: var(--brand-dark-grey);
    color: var(--text-colored-background); }
  .dashboard-header__middle--logged-out > :not(:first-child) {
    margin-left: 4.8rem; }
    @media (max-width: 830px) {
      .dashboard-header__middle--logged-out > :not(:first-child) {
        margin-left: 1.2rem; } }
  .dashboard-header__middle--logged-out > * {
    cursor: pointer; }
  @media (min-width: 320px) and (max-width: 767px) {
    .dashboard-header__middle--logged-out {
      display: none; } }
  .dashboard-header__preloader {
    display: flex;
    padding: 0 4rem;
    align-items: center;
    justify-content: flex-end;
    position: fixed;
    z-index: 100;
    box-sizing: border-box;
    height: 48px;
    width: 100%;
    top: 0;
    background-color: var(--general-main-1); }
    @media (min-width: 320px) and (max-width: 767px) {
      .dashboard-header__preloader {
        padding: 0 1.6rem; } }

/** @define footer; weak */
.footer {
  position: fixed;
  bottom: 0;
  padding: 0 1em;
  width: 100%;
  height: 36px;
  box-sizing: border-box;
  z-index: 3;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  transition: opacity 0.3s;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  background: var(--general-main-1);
  color: var(--text-prominent);
  border-top: 1px solid var(--general-section-1); }
  .footer--is-disabled {
    border-top: none; }
    .footer--is-disabled:after {
      opacity: 1;
      pointer-events: auto; }
  .footer__links {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    flex-direction: row;
    height: 100%;
    /* fix issue with rogue tiny-popover div generated in footer links */ }
    .footer__links--left {
      margin-right: auto; }
    .footer__links div {
      height: inherit;
      display: inline-flex;
      align-items: center;
      position: relative; }
  .footer__link {
    padding: 0 0.8em;
    text-decoration: none;
    height: 100%;
    display: inline-flex;
    align-items: center;
    position: relative;
    cursor: pointer; }
    .footer__link:hover {
      background: var(--general-hover); }
  .footer__icon {
    width: 1.6em;
    height: 1.6em; }
  @media (max-width: 768px) {
    .footer {
      display: none; } }

@-webkit-keyframes blinking-network-status {
  40% {
    opacity: 1; }
  100% {
    opacity: 0; } }

@keyframes blinking-network-status {
  40% {
    opacity: 1; }
  100% {
    opacity: 0; } }

/** @define network-status  */
.network-status__wrapper {
  height: 1.4em;
  position: relative; }
  .network-status__wrapper--is-mobile .network-status__circle {
    margin: 0.2em 0 0.2em -0.2em; }

.network-status__tooltip {
  left: unset;
  -webkit-text-decoration-line: none;
          text-decoration-line: none; }

.network-status__circle {
  background: var(--general-section-1);
  width: 1em;
  height: 1em;
  margin: 0.2em 1.6em;
  border-radius: 50%; }
  .network-status__circle--online {
    background: var(--text-profit-success); }
  .network-status__circle--offline {
    background: var(--text-loss-danger); }
  .network-status__circle--blinker {
    -webkit-animation: blinking-network-status 0.4s alternate infinite;
            animation: blinking-network-status 0.4s alternate infinite;
    background: var(--text-profit-success); }

/** @define server-time */
.server-time {
  display: inline-flex;
  align-self: center;
  margin-right: 1em;
  padding: 0 1em;
  font-size: 1.2rem;
  color: var(--text-general);
  font-weight: 400;
  text-transform: none;
  text-align: left;
  line-height: 1.25;
  color: var(--text-general); }
  .server-time--is-mobile {
    padding: 0 1em 0 0;
    margin-right: 0; }

/** @define ic-settings */
.ic-settings--active {
  position: relative;
  background: var(--state-hover); }
  .ic-settings--active:after {
    content: '';
    height: 0.2em;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background: var(--text-prominent); }
  .ic-settings--active .ic-settings__icon {
    pointer-events: none; }

/** @define footer-regulatory-information */
.footer-regulatory-information {
  padding: 2rem; }
  .footer-regulatory-information p {
    font-size: 1.4rem;
    color: var(--text-prominent);
    font-weight: 400;
    text-transform: none;
    text-align: left;
    line-height: 1.5; }
  .footer-regulatory-information__link {
    font-size: 1.4rem;
    color: var(--text-prominent);
    font-weight: 700;
    text-transform: none;
    text-align: left;
    line-height: 1.5;
    color: var(--brand-red-coral);
    text-decoration: none; }
  .footer-regulatory-information__icon {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    margin-bottom: 2.4rem; }

/** @define footer-icon-separator */
.footer-icon-separator {
  width: 1px;
  height: 1.6rem !important;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--general-section-1);
  margin: 0 0.1rem; }

.modal-root {
  width: 100vw;
  height: 100vh;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 9998;
  display: none;
  overflow: hidden;
  opacity: 0;
  background-color: var(--overlay-outside-dialog); }
  .modal-root:not(:empty) {
    display: flex;
    opacity: 1; }
  .modal-root--absolute {
    z-index: 9999; }

.account-settings-toggle svg {
  height: 20px;
  width: 20px; }

/** @define error-box */
.error-box {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  width: 100%;
  text-align: center;
  color: var(--text-colored-background); }

/** @define login-prompt */
.login-prompt {
  height: calc(100vh - 84px);
  margin: 0 2em;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center; }
  .login-prompt__icon {
    height: 6.4em;
    width: 6.4em;
    margin-bottom: 1em; }
    .login-prompt__icon-svg {
      height: 100%;
      width: 100%; }
  .login-prompt__message {
    font-size: 1.4em; }

.media {
  margin: 0 0 24px; }
  .media__heading {
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    text-align: left;
    line-height: 1.5;
    color: var(--text-prominent);
    margin: 0 0 16px;
    text-transform: none; }
  .media__icon {
    height: 120px;
    margin-right: 1.6em;
    border-radius: 4px;
    min-width: 160px; }
    .media__icon:empty {
      background-color: var(--general-disabled); }
  .media__description {
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: none;
    text-align: left;
    line-height: 1.5;
    color: var(--text-prominent); }
  .media__form {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    text-transform: none;
    text-transform: initial;
    color: var(--text-prominent); }

/** @define side-menu */
.side-menu {
  overflow: hidden; }
  .side-menu__heading {
    padding: 20px 16px; }
  .side-menu__main-header-layout {
    height: 100%;
    min-width: 270px; }
  .side-menu__sub-header-layout {
    padding-top: 56px;
    height: 100%;
    border-left: 2px solid var(--general-main-1); }
  .side-menu__title {
    font-size: var(--text-size-s);
    font-weight: bold;
    margin: 0 0.8rem;
    color: var(--text-prominent); }
  .side-menu__header--active {
    background-color: var(--general-main-1);
    /* postcss-bem-linter: ignore */ }
    .side-menu__header--active:hover {
      background-color: var(--general-main-1) !important; }
    .side-menu__header--active div {
      font-weight: bold; }
  .side-menu__header--disabled {
    opacity: 0.32;
    pointer-events: none; }
  .side-menu__icon {
    transform: rotate(360deg);
    margin-left: auto;
    font-weight: bold; }

/* postcss-bem-linter: ignore */
.dc-vertical-tab__tab .dc-vertical-tab__header {
  /* postcss-bem-linter: ignore */
  /* postcss-bem-linter: ignore */ }
  .dc-vertical-tab__tab .dc-vertical-tab__header .dc-vertical-tab__header__link {
    margin-left: 4px; }
  .dc-vertical-tab__tab .dc-vertical-tab__header--active {
    /* postcss-bem-linter: ignore */ }
    .dc-vertical-tab__tab .dc-vertical-tab__header--active .dc-vertical-tab__header__link {
      margin-left: 0; }
  .dc-vertical-tab__tab .dc-vertical-tab__header--disabled {
    opacity: 0.32;
    pointer-events: none; }

.livechat {
  display: flex;
  width: 100%;
  justify-content: flex-end;
  align-items: center;
  padding-right: 1.6rem; }
  .livechat__icon {
    margin-right: 0.8rem; }
    .livechat__icon-wrapper {
      display: flex;
      align-items: center;
      justify-content: center; }
  .livechat__title {
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: none;
    text-align: left;
    line-height: 1.5;
    line-height: 1.25; }

/** @define cookie-banner; weak */
.cookie-banner {
  position: fixed;
  background-color: var(--general-main-2);
  box-shadow: 0 24px 24px 0 rgba(0, 0, 0, 0.08), 0 0 24px 0 rgba(0, 0, 0, 0.08);
  font-size: 1.4rem;
  color: var(--text-general);
  font-weight: 400;
  text-transform: none;
  text-align: center;
  line-height: 1.5;
  color: var(--text-general);
  font-stretch: normal;
  font-style: normal;
  line-height: 1.5;
  letter-spacing: normal;
  padding: 2.8rem 0;
  bottom: 0;
  width: 100%;
  height: 152px;
  text-align: center;
  transition: top 0.3s ease-in-out;
  z-index: 1000; }
  @media (min-width: 320px) and (max-width: 767px) {
    .cookie-banner {
      font-size: 12px;
      font-weight: bold;
      height: -webkit-fit-content;
      height: -moz-fit-content;
      height: fit-content;
      padding: 2.4rem 0; } }
  .cookie-banner--theme-dark {
    box-shadow: 0 24px 24px 0 rgba(0, 0, 0, 0.64), 0 0 24px 0 rgba(0, 0, 0, 0.64); }
  .cookie-banner--is-closed {
    transform: translateY(152px); }
    @media (min-width: 320px) and (max-width: 767px) {
      .cookie-banner--is-closed {
        transform: translateY(168px); } }
  .cookie-banner .description {
    margin: 0 auto; }
    @media (min-width: 1024px) {
      .cookie-banner .description {
        width: 640px; } }
    @media (min-width: 320px) and (max-width: 767px) {
      .cookie-banner .description {
        max-width: 296px; } }
  .cookie-banner__btn-dont-accept, .cookie-banner__btn-dont-accept:hover, .cookie-banner__btn-accept, .cookie-banner__btn-accept:hover {
    display: inline-block;
    margin: 20px auto 0;
    height: 40px;
    border-width: 2px;
    border-radius: 4px;
    font-stretch: normal;
    font-style: normal;
    line-height: 1.43;
    letter-spacing: normal; }
    @media (min-width: 320px) and (max-width: 767px) {
      .cookie-banner__btn-dont-accept, .cookie-banner__btn-dont-accept:hover, .cookie-banner__btn-accept, .cookie-banner__btn-accept:hover {
        height: 32px;
        border-width: 1px; } }
  .cookie-banner__btn-dont-accept, .cookie-banner__btn-dont-accept:hover {
    width: 116px;
    margin-right: 8px; }
  .cookie-banner__btn-accept {
    width: 78px; }

.notification-banner {
  position: relative;
  display: flex;
  background-color: var(--general-main-1);
  color: var(--text-prominent);
  border-radius: 4px;
  box-shadow: 0 4px 6px 0 var(--shadow-menu), 0 4px 6px 0 var(--shadow-menu);
  width: 100%;
  max-width: 40rem;
  height: 14.4rem;
  transition: transform 0.25s ease, opacity 0.25s linear;
  z-index: 10;
  margin-bottom: 16px; }
  .notification-banner--enter-done {
    opacity: 1;
    transform: translateY(0); }
  .notification-banner--enter, .notification-banner--exit {
    opacity: 0;
    transform: translateY(-16px); }
  .notification-banner--left {
    z-index: 12;
    padding: 1.6rem 0 1.6rem 1.6rem;
    width: 50%;
    min-width: 210px; }
    @media (min-width: 320px) and (max-width: 767px) {
      .notification-banner--left {
        min-width: unset; } }
  .notification-banner--right {
    position: relative;
    width: calc(100% - 138px);
    overflow: hidden; }
  @media (min-width: 1024px) {
    .notification-banner__title {
      white-space: nowrap; } }
  .notification-banner__description {
    margin-top: 0.8rem; }
  .notification-banner__btn-wrapper {
    display: flex;
    flex-direction: row;
    grid-gap: 0.8rem;
    gap: 0.8rem;
    margin-top: 4rem; }
    @media (min-width: 320px) and (max-width: 767px) {
      .notification-banner__btn-wrapper {
        margin-top: 2rem; } }
  .notification-banner__bg {
    position: absolute;
    right: 0;
    background-color: #ff6444;
    width: 100%;
    height: 100%;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 50% 100%);
            clip-path: polygon(0 0, 100% 0, 100% 100%, 50% 100%);
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
    z-index: 11; }
  .notification-banner__img {
    position: absolute;
    right: 1.2rem;
    bottom: -0.8rem;
    -o-object-fit: contain;
       object-fit: contain;
    height: 15.2rem;
    width: auto;
    z-index: 12;
    pointer-events: none; }
    @media (min-width: 320px) and (max-width: 767px) {
      .notification-banner__img {
        height: 12rem;
        bottom: 0;
        right: 0.8rem; } }
  .notification-banner__close-icon {
    position: absolute;
    z-index: 12;
    right: 1.6rem;
    top: 1.6rem;
    cursor: pointer; }
  @media (min-width: 320px) and (max-width: 767px) {
    .notification-banner {
      height: 100%;
      max-height: 11.8rem;
      width: calc(100vw - 1.6rem);
      left: 0.8rem;
      top: -0.2rem; } }

/** @define page-404 */
.page-404__image {
  margin-right: 1.6rem; }

/** @define account-deactivated */
.account-deactivated {
  padding: 24px 95px;
  color: var(--text-prominent);
  font-weight: bold;
  width: 100%;
  text-align: center;
  line-height: 1.5;
  max-width: 44rem;
  font-size: var(--text-size-s); }

/* @define reality-check */
.reality-check__text:not(:last-child) {
  margin-bottom: 1.2rem; }

.reality-check__text--center {
  text-align: center; }
  @media (min-width: 320px) and (max-width: 767px) {
    .reality-check__text--center {
      text-align: left; } }

@media (min-width: 320px) and (max-width: 767px) {
  .reality-check__text--description {
    font-size: 1.2rem; } }

.reality-check__separator {
  width: 100%;
  height: 1px;
  background-color: var(--general-section-1);
  margin: 2.4rem 0; }
  .reality-check__separator--large {
    margin: 4rem 0; }
  @media (min-width: 320px) and (max-width: 767px) {
    .reality-check__separator {
      margin: 1.6rem 0; } }

.reality-check__fieldset {
  max-width: 33.5rem;
  margin: auto;
  padding-top: 1.2rem; }

.reality-check__column-wrapper {
  display: flex;
  flex-direction: row;
  overflow-y: auto; }
  @media (min-width: 320px) and (max-width: 767px) {
    .reality-check__column-wrapper {
      flex-direction: column;
      padding: 0.8rem 2.4rem; } }
  @media only screen and (min-width: 320px) and (max-width: 767px) and (max-width: 340px) {
    .reality-check__column-wrapper {
      padding: 0.8rem 1.6rem; } }

.reality-check__column:not(:last-child) {
  margin-right: 2.4rem; }
  @media (min-width: 320px) and (max-width: 767px) {
    .reality-check__column:not(:last-child) {
      margin-right: 0;
      margin-bottom: 0.8rem; } }

@media (min-width: 320px) and (max-width: 767px) {
  .reality-check__column-content {
    padding-top: 1.6rem; } }

.reality-check__row {
  width: 25.1rem;
  height: 4rem;
  background-color: var(--general-section-1);
  margin-bottom: 0.1rem;
  display: flex;
  align-items: center;
  padding: 1rem 1.6rem;
  font-size: 1.4rem; }
  .reality-check__row:first-child {
    border-radius: 8px 8px 0 0; }
  .reality-check__row:last-child {
    margin-bottom: 0.8rem;
    border-radius: 0 0 8px 8px; }
  .reality-check__row :first-child {
    width: 12.8rem;
    padding-right: 0.8rem; }
    @media (min-width: 320px) and (max-width: 767px) {
      .reality-check__row :first-child {
        width: 16.8rem; } }
  @media (min-width: 320px) and (max-width: 767px) {
    .reality-check__row :nth-child(2) {
      margin-left: auto; } }

.reality-check__button--full-width {
  width: 100%; }
  @media (min-width: 320px) and (max-width: 767px) {
    .reality-check__button--full-width {
      width: 25.1rem;
      display: flex;
      margin-left: auto;
      margin-right: auto; } }

.reality-check__submit {
  background-color: unset;
  padding: 0 0.8rem; }
  @media (min-width: 320px) and (max-width: 767px) {
    .reality-check__submit {
      padding: 0 0.8rem; } }

@media (min-width: 320px) and (max-width: 767px) {
  .reality-check__wrapper {
    overflow-y: auto;
    overflow-x: hidden;
    padding: 2.4rem; } }

@media (min-width: 320px) and (max-width: 767px) {
  .dc-modal__container_reality-check .dc-modal-header__title--reality-check {
    margin: auto;
    text-align: center;
    line-height: 1.43; } }

@media (min-width: 320px) and (max-width: 767px) {
  .dc-modal__container_reality-check .dc-modal-body {
    padding: 0; } }

/* @define reset-password */
.reset-password {
  margin: 1.6rem 1.6rem 0; }
  .reset-password__residence-selection, .reset-password__password-selection {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-flow: nowrap column; }
  .reset-password__password-selection .reset-password__heading {
    margin-bottom: 3.3rem; }
  .reset-password__heading {
    margin-bottom: 0.8rem; }
  .reset-password__text {
    text-align: center;
    margin-bottom: 3.3rem; }
  .reset-password__subtext {
    margin: 1rem 0 2.4rem; }
  .reset-password__btn {
    margin: 0;
    background-color: var(--button-primary-default);
    font-weight: bold;
    color: var(--text-colored-background);
    font-size: 1.2rem; }
    .reset-password__btn:hover {
      background-color: var(--button-primary-hover); }
    .reset-password__btn--disabled {
      opacity: 0.32;
      cursor: not-allowed !important; }
  .reset-password__fieldset {
    position: relative;
    width: 100%; }
    @media (min-width: 1024px) {
      .reset-password__fieldset {
        max-width: 30rem; } }
  .reset-password__password-field {
    /* postcss-bem-linter: ignore */ }
    .reset-password__password-field > label {
      top: 0.9rem;
      background-color: var(--general-main-2); }

/* @define reset-trading-password */
.reset-trading-password__description--is-centered {
  margin: 0 auto;
  max-width: 70%; }

.reset-trading-password__confirm-button {
  margin-top: 2.4rem; }

.reset-trading-password__dialog .dc-dialog__dialog {
  max-height: -webkit-fit-content;
  max-height: -moz-fit-content;
  max-height: fit-content; }
  .reset-trading-password__dialog .dc-dialog__dialog .dc-dialog__content {
    margin-bottom: 0; }

.reset-trading-password__error {
  max-width: 38.4rem;
  min-height: 28.4rem;
  padding-top: 2rem;
  text-align: center; }

.reset-trading-password__lead {
  margin: 1.6rem 0 0; }

.reset-trading-password__set-password {
  display: flex;
  justify-content: center;
  flex-flow: nowrap column; }
  .reset-trading-password__set-password .reset-trading-password__heading {
    margin-bottom: 2.4rem; }

.reset-trading-password__password-success {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center; }
  .reset-trading-password__password-success .reset-trading-password__icon {
    margin-bottom: 2.4rem; }
  .reset-trading-password__password-success .reset-trading-password__heading {
    margin-bottom: 0.8rem; }
  .reset-trading-password__password-success .reset-trading-password__subtext {
    margin-bottom: 2.4rem; }

.reset-trading-password__residence-selection, .reset-trading-password__password-selection {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: nowrap column; }

.reset-trading-password__password-selection .reset-trading-password__heading {
  margin-bottom: 3.3rem; }

.reset-trading-password__heading {
  margin-bottom: 0.8rem; }

.reset-trading-password__text {
  text-align: center;
  margin-bottom: 3.3rem; }

.reset-trading-password__subtext {
  margin-bottom: 1.6rem; }

.reset-trading-password__hint {
  margin-bottom: 2.4rem; }

.reset-trading-password__btn {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  align-self: flex-end; }

.reset-trading-password__fieldset {
  position: relative;
  width: 100%; }
  @media (min-width: 1024px) {
    .reset-trading-password__fieldset {
      max-width: 30rem; } }

.reset-trading-password__input-field {
  margin-bottom: 1.2rem; }

.reset-trading-password__password-field {
  /* postcss-bem-linter: ignore */ }
  .reset-trading-password__password-field > label {
    top: 0.9rem;
    background-color: var(--general-main-2); }

/* @define unlink-password */
.unlink-password__dialog .dc-dialog__dialog {
  max-height: -webkit-fit-content;
  max-height: -moz-fit-content;
  max-height: fit-content; }
  .unlink-password__dialog .dc-dialog__dialog .dc-dialog__content {
    margin-bottom: 0; }

.unlink-password__set-password {
  display: flex;
  justify-content: center;
  flex-flow: nowrap column; }
  .unlink-password__set-password .unlink-password__heading {
    margin-bottom: 2.4rem; }

.unlink-password__password-success {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center; }
  .unlink-password__password-success .unlink-password__icon {
    margin-bottom: 2.4rem;
    margin-left: 1.6rem; }
  .unlink-password__password-success .unlink-password__heading {
    margin-bottom: 0.8rem; }
  .unlink-password__password-success .unlink-password__subtext {
    margin-bottom: 2.4rem; }

.unlink-password__residence-selection, .unlink-password__password-selection {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: nowrap column; }

.unlink-password__password-selection .unlink-password__heading {
  margin-bottom: 3.3rem; }

.unlink-password__heading {
  margin-bottom: 0.8rem; }

.unlink-password__text {
  text-align: center;
  margin-bottom: 3.3rem; }

.unlink-password__subtext {
  margin-bottom: 1.6rem; }

.unlink-password__hint {
  margin-bottom: 2.4rem; }

.unlink-password__btn {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  align-self: flex-end; }

.unlink-password__fieldset {
  position: relative;
  width: 100%; }
  @media (min-width: 1024px) {
    .unlink-password__fieldset {
      max-width: 30rem; } }

.unlink-password__input-field {
  margin-bottom: 1.2rem; }

.unlink-password__password-field {
  /* postcss-bem-linter: ignore */ }
  .unlink-password__password-field > label {
    top: 0.9rem;
    background-color: var(--general-main-2); }

.redirect-notice {
  z-index: 50000; }

.dc-modal__container_welcome {
  overflow: visible; }
  @media (min-width: 320px) and (max-width: 767px) {
    .dc-modal__container_welcome {
      overflow: auto;
      max-height: 95vh; } }

.welcome__title {
  margin: 2.4rem; }

.welcome__message {
  display: none;
  flex-direction: row;
  position: fixed;
  align-items: center; }
  .welcome__message__text {
    font-size: 1.6rem;
    color: var(--text-colored-background);
    font-weight: 700;
    text-transform: none;
    text-align: left;
    line-height: 1.75;
    padding-left: 0.8rem; }
  .welcome__message--left {
    top: 50%;
    left: -1.6rem;
    transform: translate(-100%, -50%); }
    .welcome__message--left .welcome__message__text {
      width: 12rem; }
  .welcome__message--right {
    top: 50%;
    right: -1.6rem;
    transform: translate(100%, -50%); }
  @media (min-width: 1024px) {
    .welcome__message--visible {
      display: flex; } }

.welcome__carousel {
  width: 100%; }

.welcome-column {
  width: 32rem;
  height: 46.3rem;
  position: relative;
  padding: 1.6rem 3.2rem;
  background-repeat: no-repeat;
  background-position: top right; }
  @media (min-width: 320px) and (max-width: 767px) {
    .welcome-column {
      width: 100%;
      box-shadow: none; }
      .welcome-column:not(:last-child) {
        margin-bottom: 3rem; } }
  .welcome-column:hover {
    box-shadow: 0 0 3rem 0.5rem var(--shadow-drop); }
  .welcome-column--left:hover {
    background-image: url(/br_add_jump_index/public/images/common/welcome-bg-blue.svg); }
  @media (min-width: 320px) and (max-width: 767px) {
    .welcome-column--left {
      background-image: url(/br_add_jump_index/public/images/common/welcome-bg-blue.svg); } }
  .welcome-column--right:hover {
    background-image: url(/br_add_jump_index/public/images/common/welcome-bg-red.svg); }
  @media (min-width: 320px) and (max-width: 767px) {
    .welcome-column--right {
      background-image: url(/br_add_jump_index/public/images/common/welcome-bg-red.svg); } }
  .welcome-column__icons {
    display: flex;
    flex-direction: row;
    justify-content: center; }
  .welcome-column__icon {
    margin: 0.8rem 0.6rem 1.6rem; }
  .welcome-column__title {
    font-size: 1.6rem;
    color: var(--text-prominent);
    font-weight: 700;
    text-transform: none;
    text-align: center;
    line-height: 1.75; }
  .welcome-column__description {
    font-size: 1.2rem;
    color: var(--text-prominent);
    font-weight: 400;
    text-transform: none;
    text-align: center;
    line-height: 1.25;
    line-height: 1.5;
    height: 7.8rem;
    padding: 0.8rem 0 1.6rem;
    border-bottom: 1px solid var(--general-section-1); }
  .welcome-column__footer {
    position: absolute;
    bottom: 1.6rem;
    left: 1.6rem;
    width: calc(100% - 3.2rem); }
    @media (min-width: 320px) and (max-width: 767px) {
      .welcome-column__footer {
        left: 3.2rem;
        width: calc(100% - 6.4rem);
        bottom: 0.6rem; } }
    .welcome-column__footer__text {
      font-size: 1.2rem;
      color: var(--text-less-prominent);
      font-weight: 400;
      text-transform: none;
      text-align: center;
      line-height: 1.25;
      padding-top: 0.8rem; }
      @media (min-width: 1024px) {
        .welcome-column__footer__text {
          display: none; } }
  .welcome-column__button {
    width: 100%; }
  .welcome-column__platforms__title {
    padding: 2.4rem 1.6rem 1.6rem; }
  .welcome-column__platforms__container {
    display: flex;
    flex-direction: column; }
  .welcome-column__platform {
    display: grid;
    grid-template-columns: auto 1fr;
    grid-template-rows: auto auto;
    grid-column-gap: 0.8rem;
    grid-row-gap: 0.4rem;
    margin-bottom: 1.6rem; }
    @media (min-width: 320px) and (max-width: 767px) {
      .welcome-column__platform {
        margin-bottom: 0.6rem; } }
    .welcome-column__platform__icon {
      grid-row: 1 / -1;
      grid-column: 1; }
    .welcome-column__platform__title {
      font-size: 1.2rem;
      color: var(--text-prominent);
      font-weight: 700;
      text-transform: none;
      text-align: left;
      line-height: 1.25;
      grid-row: 1;
      grid-column: 2; }
    .welcome-column__platform__description {
      font-size: 1.2rem;
      color: var(--text-less-prominent);
      font-weight: 400;
      text-transform: none;
      text-align: left;
      line-height: 1.25;
      grid-row: 2;
      grid-column: 2; }

.welcome__body {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly; }
  @media (min-width: 320px) and (max-width: 767px) {
    .welcome__body {
      flex-wrap: wrap; } }

.welcome__footer {
  font-size: 1.2rem;
  color: var(--text-less-prominent);
  font-weight: 400;
  text-transform: none;
  text-align: center;
  line-height: 1.25;
  padding: 2.4rem; }
  @media (min-width: 320px) and (max-width: 767px) {
    .welcome__footer {
      display: none; } }

